{"version":3,"sources":["webpack://suz/webpack/universalModuleDefinition","webpack://suz/webpack/bootstrap","webpack://suz/./src/Utils/Vector/Vec4.ts","webpack://suz/./src/Utils/MathUtils.ts","webpack://suz/./src/Utils/Vector/Vector.ts","webpack://suz/./src/Bitmap.ts","webpack://suz/./src/Utils/Vector/VecShorthands.ts","webpack://suz/./src/Utils/Vector/Vec2.ts","webpack://suz/./src/Utils/Vector/Vec3.ts","webpack://suz/./src/Utils/Matrix4.ts","webpack://suz/./src/VaryingInterpolator/VaryingInterpolator.ts","webpack://suz/./src/Utils/ColorUtils.ts","webpack://suz/./src/Utils/Vector/VecN.ts","webpack://suz/./src/Edge.ts","webpack://suz/./src/VaryingInterpolator/VaryingInterpolator2.ts","webpack://suz/./src/VaryingInterpolator/VaryingInterpolator3.ts","webpack://suz/./src/index.ts","webpack://suz/./src/Context.ts","webpack://suz/./src/Utils/Clock.ts","webpack://suz/./src/Utils/ModelLoader.ts","webpack://suz/./src/Texture.ts","webpack://suz/./src/VertexArray.ts"],"names":["root","factory","exports","module","define","amd","window","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Vector_1","Vec4","[object Object]","x","y","z","w","dims","v","k","Math","sqrt","pow","times","mag","N","dot","sub","eps","EPS","abs","g","b","a","degrees","angle_radians","radians","angle_degrees","clamp","min","max","parallelogramArea","interpolableAdd","add","interpolableTimes","interpolableMul","mul","interpolableAddTimes","addTimes","fillSequence","dest","seq","set","dest_len","length","offset","copyWithin","VecShorthands_1","swizzling_trap","prop","default_get","Function","chars","split","map","char","vec","swizzle","sizzling_str","undefined","Proxy","ColorUtils_1","MathUtils_1","Vec4_1","Bitmap","width","height","_width","_height","_data","Uint8ClampedArray","color","colors","black","data","idx","Vec2_1","Vec3_1","VecN_1","Matrix4_1","vec2","args","Vec2","vec3","Vec3","vec4","VecN","values","Error","vecn","mat4","Matrix4","scale","Float32Array","coeffs","_m","identity","fill","prod","new_coeffs","angle_rad","cos","sin","det","inv","fov_rads","aspect_ratio","near","far","tan_half_fov","tan","near_minus_far","h","VaryingInterpolator","VAO","vertices","_varyings","Map","_vertices","_VAO","varying","current","x_step","varyings","hexToColor","hex","transparent","white","red","green","blue","yellow","cyan","pink","orange","rand","floor","random","css","max_history","cnv","document","createElement","ctx","getContext","history","style","has","fillStyle","fillRect","getImageData","size","delete","keys","next","createCSSColorConverter","_values","_dims","out","sum","new_values","Edge","from","to","gradient","_y_start","ceil","ndc","_y_end","_interpolator","_varying_names","_from","_to","y_offset","_x_step","_x","x_offset","index","y_step","step","y_start","y_end","VaryingInterpolator_1","VaryingInterpolator2","super","_inv_dx","_inv_dy","_computeGradients","current_varyings","varying_a","varying_b","_computeFloatGradient","_computeVecGradient","VaryingInterpolator3","one_over_z_a","one_over_z_b","one_over_z_c","varyingNames","varying_c","ac_delta_y","bc_delta_y","b_sub_c","a_sub_c","ac_delta_x","bc_delta_x","__export","Bitmap_1","Edge_1","VaryingInterpolator2_1","VaryingInterpolator3_1","DrawingMode","Context","target","options","_target","_initOptions","_screen_space_matrix","screenSpace","_options","depth_test","_depth_buffer","Infinity","optns","assign","backface_culling","init","initDepthBuffer","u","res","_program","vertex_shader","transform","pos","__ndc","depth","left","right","x_min","x_max","_initVaryings","_current_varyings","_current_gradient","stepX","_vertex_array","_shouldDrawFragment","_set","fragment_shader","uniforms","edge","x0","y0","x1","y1","dx","dy","sx","sy","e2","first","count","_perspectiveTransform","at","_strokeEdge","indices","stroke","_strokeTriangle","_fillTriangle","invert","long","_scanEdges","short","_scanLine","LINES","_drawLines","TRIANGLES","_drawTriangles","draw","indexed","_drawLinesIndexed","_drawTrianglesIndexed","prog","_clearDepthBuffer","resize","Clock","last_tick","Date","now","delta","ModelLoader","parseVertex","line","coords","substr","parseFloat","parseUV","uvs","parseNormal","parseOBJ","obj_str","lines","normals","faces_cache","max_idx","mesh","attributes","uv","normal","bounding_box","trim","charAt","push","faces","face_indices","face","vert_idx","uv_idx","normal_idx","parseInt","fourth","Uint8Array","Uint16Array","Uint32Array","Texture","read","VertexArray","_attributes","_uniforms","_current_idx","_attribute_accessor","_","_varying_setter","obj","val","prop_varyings","array","position","_indices","model","attrib_name","attribute","addAttribute","vertexCount"],"mappings":"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,GAAA,IAAAzH,EACAkI,EAAAT,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAzH,EACAkI,EAAAT,GAAA,KAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAzH,EACAkI,EAAAT,GAAA,IAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAzH,EACAkI,EAAAT,GAAA,IAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAzH,EACAkI,EAAAT,GAAA,KAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAzH,EACAkI,EAAAT,GAAA,IAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAzH,EACAkI,EAAAT,GAAA,KAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAzH,EACAkI,EAAAT,GAAA,KAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAzH,EACAkI,EAAAT,GAAA,KAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAzH,EACAkI,EAAAT,GAAA,MAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,IAAAzH,EACAkI,EAAAT,GAAA,KAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAzH,EACAkI,EAAAT,GAAA,KAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAzH,EACAkI,EAAAT,GAAA,KAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAzH,EACAkI,EAAAT,GAAA,KAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,IAAAzH,EACAkI,EAAAT,GAAA,MAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,GAAAnI,KAAAmI,GAAA,IAAAzH,EACAkI,EAEAtG,gBAAA+E,GACA,IAAA9E,EAAAC,EAAAC,EACA,IAAA4E,EAAArC,SACA,iBAAAqC,EAAA,IAEA7E,EADAD,EAAA8E,EAAA,GAEA5E,EAAAF,IAGAA,EAAA8E,EAAA,GAAA9E,EACAC,EAAA6E,EAAA,GAAA7E,EACAC,EAAA4E,EAAA,GAAA5E,IAGA,MAAAjC,EAAA,IAAAuH,EAKA,OAJAvH,EAAA2H,GAAA,GAAA5F,EACA/B,EAAA2H,GAAA,GAAA3F,EACAhC,EAAA2H,GAAA,IAAA1F,EACAjC,EAAA2H,GAAA,MACA3H,EAEA8B,mBAAAuG,EAAAC,EAAAC,EAAAC,GACA,MAAAxI,EAAA,IAAAuH,EACAkB,EAAAnG,KAAAoG,IAAAL,EAAA,GACAM,EAAAJ,EAAAC,EAOA,OANAxI,EAAA2H,GAAA,MAAAc,EAAAH,GACAtI,EAAA2H,GAAA,KAAAc,EACAzI,EAAA2H,GAAA,MAAAY,EAAAC,GAAAG,EACA3I,EAAA2H,GAAA,MAAAa,EAAAD,EAAAI,EACA3I,EAAA2H,GAAA,MACA3H,EAAA2H,GAAA,MACA3H,EAEA8B,mBAAA+D,EAAAC,GACA,MAAA9F,EAAA,IAAAuH,EACArF,EAAA2D,EAAA,EACA+C,EAAA9C,EAAA,EAKA,OAJA9F,EAAA2H,GAAA,GAAAzF,EACAlC,EAAA2H,GAAA,GAAAzF,EACAlC,EAAA2H,GAAA,GAAAiB,EACA5I,EAAA2H,GAAA,GAAAiB,EACA5I,EAEA8B,mBAAAM,GACA,MAAApC,EAAA,IAAAuH,EAIA,OAHAvH,EAAA2H,GAAA,GAAAvF,EAAAL,EACA/B,EAAA2H,GAAA,GAAAvF,EAAAJ,EACAhC,EAAA2H,GAAA,IAAAvF,EAAAH,EACAjC,GAGAb,EAAAoI,wCCjNAjH,OAAAC,eAAApB,EAAA,cAA8C0B,OAAA,IAC9C,MAAA6E,EAAoBhG,EAAQ,GAiB5BP,EAAA0J,0BAfA/G,YAAAgH,KAAAC,GACAvJ,KAAAwJ,UAAA,IAAAC,IACAzJ,KAAA0J,UAAAH,EACAvJ,KAAA2J,KAAAL,EAEAhH,MAAAsH,GACA,OAAAA,EAAAC,QAAA3D,EAAA9B,gBAAAwF,EAAAC,QAAAD,EAAAE,QAEAC,eACA,OAAA/J,KAAAwJ,UAEAF,UACA,OAAAtJ,KAAA2J,qCCfA7I,OAAAC,eAAApB,EAAA,cAA8C0B,OAAA,IAC9C,MAAA8E,EAAejG,EAAQ,GAsBvB,SAAA8J,EAAAC,GACA,WAAA9D,EAAA9D,MAAA4H,GAAA,aAAAA,GAAA,gBAAAA,GAAA,OAEAtK,EAAAqK,aACArK,EAAAiH,QACAsD,YAAA,IAAA/D,EAAA9D,KAAA,SACAwE,MAAAmD,EAAA,GACAG,MAAAH,EAAA,UACAI,IAAAJ,EAAA,UACAK,MAAAL,EAAA,OACAM,KAAAN,EAAA,KACAO,OAAAP,EAAA,UACAQ,KAAAR,EAAA,OACAS,KAAAT,EAAA,UACAU,OAAAV,EAAA,UACAW,KAAA,IAAAX,EAAAlH,KAAA8H,MAAA,SAAA9H,KAAA+H,WACAC,SAAA/E,GAEA,oBAAAhG,SACAJ,EAAAiH,OAAAkE,IAxCA,SAAAC,EAAA,KACA,MAAAC,EAAAC,SAAAC,cAAA,UACAF,EAAA3E,MAAA,EACA2E,EAAA1E,OAAA,EACA,MAAA6E,EAAAH,EAAAI,WAAA,MACAC,EAAA,IAAA5B,IACA,OAAA6B,IACA,GAAAD,EAAAE,IAAAD,GACA,OAAAD,EAAApK,IAAAqK,GACAH,EAAAK,UAAAF,EACAH,EAAAM,SAAA,SACAN,EAAA9C,OACA,MAAAnH,EAAAuC,EAAAC,EAAAC,GAAAwH,EAAAO,aAAA,SAAA5E,KACAH,EAAA,IAAAR,EAAA9D,KAAAnB,EAAA,IAAAuC,EAAA,IAAAC,EAAA,IAAAC,EAAA,KAKA,OAJA0H,EAAAM,OAAAZ,GACAM,EAAAO,OAAAP,EAAAQ,OAAAC,OAAAzK,OAEAgK,EAAAvG,IAAAwG,EAAA3E,GACAA,GAsBAoF,kCC1CAjL,OAAAC,eAAApB,EAAA,cAA8C0B,OAAA,IAC9C,MAAAe,EAAiBlC,EAAQ,SAEzBwH,EACApF,YAAAqF,GACA,GAAAA,EAAA3C,OAAA,EACA,UAAA4C,kEAAwFD,KAExF3H,KAAAgM,QAAArE,aAAAM,aAAAN,EAAA,IAAAM,aAAAN,GACA3H,KAAAiM,MAAAtE,EAAA3C,OAEA1C,IAAAM,GACA,MAAAsJ,EAAA,IAAAxE,EAAA1H,KAAAgM,SACA,QAAA5L,EAAA,EAAuBA,EAAAJ,KAAAiM,MAAgB7L,IACvC8L,EAAAF,QAAA5L,IAAAwC,EAAAoJ,QAAA5L,GAEA,OAAA8L,EAEA5J,IAAAM,GACA,MAAAsJ,EAAA,IAAAxE,EAAA1H,KAAAgM,SACA,QAAA5L,EAAA,EAAuBA,EAAAJ,KAAAiM,MAAgB7L,IACvC8L,EAAAF,QAAA5L,IAAAwC,EAAAoJ,QAAA5L,GAEA,OAAA8L,EAEA5J,IAAAM,GACA,MAAAsJ,EAAA,IAAAxE,EAAA1H,KAAAgM,SACA,QAAA5L,EAAA,EAAuBA,EAAAJ,KAAAiM,MAAgB7L,IACvC8L,EAAAF,QAAA5L,IAAAwC,EAAAoJ,QAAA5L,GAEA,OAAA8L,EAEA5J,MAAAO,GACA,MAAAqJ,EAAA,IAAAxE,EAAA1H,KAAAgM,SACA,QAAA5L,EAAA,EAAuBA,EAAAJ,KAAAiM,MAAgB7L,IACvC8L,EAAAF,QAAA5L,IAAAyC,EAEA,OAAAqJ,EAEA5J,IAAAM,GACA,MAAAsJ,EAAA,IAAAxE,EAAA1H,KAAAgM,SACA,QAAA5L,EAAA,EAAuBA,EAAAJ,KAAAiM,MAAgB7L,IACvC8L,EAAAF,QAAA5L,IAAAwC,EAAAoJ,QAAA5L,GAEA,OAAA8L,EAEA5J,IAAAM,GACA,IAAAuJ,EAAA,EACA,QAAA/L,EAAA,EAAuBA,EAAAJ,KAAAiM,MAAgB7L,IACvC+L,GAAAnM,KAAAgM,QAAA5L,GAAAwC,EAAAoJ,QAAA5L,GAEA,OAAA+L,EAEA7J,MACA,IAAA6J,EAAA,EACA,QAAA/L,EAAA,EAAuBA,EAAAJ,KAAAiM,MAAgB7L,IACvC+L,GAAArJ,KAAAE,IAAAhD,KAAAgM,QAAA5L,GAAA,GAEA,OAAA0C,KAAAC,KAAAoJ,GAEA7J,YACA,OAAAtC,KAAAiD,MAAA,EAAAjD,KAAAkD,OAEAZ,QAAAa,GACA,OAAAA,EAAAF,MAAA,EAAAjD,KAAAoD,IAAAD,IAAAE,IAAArD,MAEAsC,SAAAM,EAAAC,GACA,MAAAqJ,EAAA,IAAAxE,EAAA1H,KAAAgM,SACA,QAAA5L,EAAA,EAAuBA,EAAAJ,KAAAiM,MAAgB7L,IACvC8L,EAAAF,QAAA5L,GAAA8L,EAAAF,QAAA5L,GAAAwC,EAAAoJ,QAAA5L,GAAAyC,EAEA,OAAAqJ,EAEA5J,OAAAM,EAAAU,EAAAlB,EAAAmB,KACA,GAAAvD,KAAAiM,QAAArJ,EAAAqJ,MACA,SACA,QAAA7L,EAAA,EAAuBA,EAAAJ,KAAAiM,MAAgB7L,IACvC,GAAA0C,KAAAU,IAAAxD,KAAAgM,QAAA5L,GAAAwC,EAAAoJ,QAAA5L,IAAAkD,EACA,SAEA,SAEAX,WACA,OAAA3C,KAAAiM,MAEAtE,aACA,OAAA3H,KAAAgM,QAEArE,WAAAyE,GACApM,KAAAgM,QAAAI,EACApM,KAAAiM,MAAAG,EAAApH,OAEA9D,QACA,OAAAlB,KAAAgM,QAAA,GAEAzJ,QACA,OAAAvC,KAAAgM,QAAA,GAEA9K,SACAlB,KAAAgM,QAAA,GAAA9K,EAEAqB,SACAvC,KAAAgM,QAAA,GAAAzJ,EAEAkB,QACA,OAAAzD,KAAAgM,QAAA,GAEAxJ,QACA,OAAAxC,KAAAgM,QAAA,GAEAvI,SACAzD,KAAAgM,QAAA,GAAAvI,EAEAjB,SACAxC,KAAAgM,QAAA,GAAAxJ,EAEAkB,QACA,OAAA1D,KAAAgM,QAAA,GAEAvJ,QACA,OAAAzC,KAAAgM,QAAA,GAEAtI,SACA1D,KAAAgM,QAAA,GAAAtI,EAEAjB,SACAzC,KAAAgM,QAAA,GAAAvJ,EAEAkB,QACA,OAAA3D,KAAAgM,QAAA,GAEAtJ,QACA,OAAA1C,KAAAgM,QAAA,GAEArI,SACA3D,KAAAgM,QAAA,GAAArI,EAEAjB,SACA1C,KAAAgM,QAAA,GAAAtJ,GAGA/C,EAAA+H,qCC7IA5G,OAAAC,eAAApB,EAAA,cAA8C0B,OAAA,IAC9C,MAAA6E,EAAoBhG,EAAQ,GAqD5BP,EAAA0M,WAnDA/J,YAAAgK,EAAAC,EAAAC,GACAxM,KAAAyM,SAAA3J,KAAA4J,KAAAJ,EAAAK,IAAAnK,GACAxC,KAAA4M,OAAA9J,KAAA4J,KAAAH,EAAAI,IAAAnK,GACAxC,KAAA6M,cAAAL,EACAxM,KAAAwJ,UAAA,IAAAC,IACAzJ,KAAA8M,mBAAAN,EAAAzC,SAAA8B,QACA7L,KAAA+M,MAAAT,EACAtM,KAAAgN,IAAAT,EACA,MAAAU,EAAAjN,KAAAyM,SAAAH,EAAAK,IAAAnK,EACAxC,KAAAkN,SAAAZ,EAAAK,IAAApK,EAAAgK,EAAAI,IAAApK,IAAA+J,EAAAK,IAAAnK,EAAA+J,EAAAI,IAAAnK,GACAxC,KAAAmN,GAAAb,EAAAK,IAAApK,EAAA0K,EAAAjN,KAAAkN,QACA,MAAAE,EAAApN,KAAAmN,GAAAb,EAAAK,IAAApK,EACA,QAAAnC,EAAA,EAAuBA,EAAAJ,KAAA8M,eAAA9H,OAAgC5E,IAAA,CACvD,MAAAO,EAAAX,KAAA8M,eAAA1M,GACAwJ,EAAA4C,EAAAzC,SAAA9I,IAAAN,GACAX,KAAAwJ,UAAA1E,IAAAnE,GACAkJ,QAAA3D,EAAAzB,qBAAAyB,EAAAzB,qBAAA+H,EAAAlD,IAAAS,SAAA9I,IAAAN,GAAA2L,EAAAe,OAAAzD,EAAAE,OAAAsD,GAAAxD,EAAA0D,OAAAL,GACAM,KAAArH,EAAAzB,qBAAAmF,EAAA0D,OAAA1D,EAAAE,OAAA9J,KAAAkN,YAIA5K,OACAtC,KAAAmN,IAAAnN,KAAAkN,QACA,QAAA9M,EAAA,EAAuBA,EAAAJ,KAAA8M,eAAA9H,OAAgC5E,IAAA,CACvD,MAAAO,EAAAX,KAAA8M,eAAA1M,GACAwJ,EAAA5J,KAAAwJ,UAAAvI,IAAAN,GACAiJ,EAAAC,QAAA3D,EAAA9B,gBAAAwF,EAAAC,QAAAD,EAAA2D,OAGAhL,QACA,OAAAvC,KAAAmN,GAEAK,cACA,OAAAxN,KAAAyM,SAEAgB,YACA,OAAAzN,KAAA4M,OAEAN,WACA,OAAAtM,KAAA+M,MAEAR,SACA,OAAAvM,KAAAgN,IAEAjD,eACA,OAAA/J,KAAAwJ,UAEAgD,eACA,OAAAxM,KAAA6M,8CCnDA/L,OAAAC,eAAApB,EAAA,cAA8C0B,OAAA,IAC9C,MAAAqM,EAA8BxN,EAAQ,GAgCtCP,EAAAgO,mCA/BAD,EAAArE,oBACA/G,YAAAqB,EAAAD,EAAA4F,GACAsE,MAAAtE,EAAA3F,EAAAD,GACA1D,KAAA6N,QAAA,GAAAnK,EAAAiJ,IAAApK,EAAAoB,EAAAgJ,IAAApK,GACAvC,KAAA8N,QAAA,GAAApK,EAAAiJ,IAAAnK,EAAAmB,EAAAgJ,IAAAnK,GACAxC,KAAA+N,oBAEAzL,oBACA,UAAA3B,KAAAX,KAAA0J,UAAA,GAAAK,SAAA,CACA,MAAAiE,EAAAhO,KAAA2J,KAAAI,SAAA9I,IAAAN,GACAsN,EAAAD,EAAAhO,KAAA0J,UAAA,GAAA2D,OACAa,EAAAF,EAAAhO,KAAA0J,UAAA,GAAA2D,OACA,iBAAAY,EACAjO,KAAAwJ,UAAA1E,IAAAnE,EAAAX,KAAAmO,sBAAAF,EAAAC,IAGAlO,KAAAwJ,UAAA1E,IAAAnE,EAAAX,KAAAoO,oBAAAH,EAAAC,KAIA5L,sBAAAqB,EAAAD,GAGA,OAAgBoG,QAFhBpG,EAAAC,GAAA3D,KAAA6N,QAEgBP,QADhB5J,EAAAC,GAAA3D,KAAA8N,SAGAxL,oBAAAqB,EAAAD,GAGA,OAAgBoG,OAFhBpG,EAAAL,IAAAM,GAAAV,MAAAjD,KAAA6N,SAEgBP,OADhB5J,EAAAL,IAAAM,GAAAV,MAAAjD,KAAA8N,0CC7BAhN,OAAAC,eAAApB,EAAA,cAA8C0B,OAAA,IAC9C,MAAA6E,EAAoBhG,EAAQ,GAC5BwN,EAA8BxN,EAAQ,GA4DtCP,EAAA0O,mCA3DAX,EAAArE,oBACA/G,YAAAqB,EAAAD,EAAAjD,EAAA6I,GACAsE,MAAAtE,EAAA3F,EAAAD,EAAAjD,GACAT,KAAA6N,QAAA,IACAnK,EAAAiJ,IAAApK,EAAA9B,EAAAkM,IAAApK,IACAoB,EAAAgJ,IAAAnK,EAAA/B,EAAAkM,IAAAnK,IACAmB,EAAAgJ,IAAApK,EAAA9B,EAAAkM,IAAApK,IACAmB,EAAAiJ,IAAAnK,EAAA/B,EAAAkM,IAAAnK,IACAxC,KAAA8N,SAAA9N,KAAA6N,QACA7N,KAAA+N,oBAEAzL,oBAEA,MAAAgM,EAAAtO,KAAA0J,UAAA,GAAAiD,IAAAjK,EACA6L,EAAAvO,KAAA0J,UAAA,GAAAiD,IAAAjK,EACA8L,EAAAxO,KAAA0J,UAAA,GAAAiD,IAAAjK,EACA,UAAA/B,KAAAX,KAAA2J,KAAA8E,aAAA,CACA,MAAAT,EAAAhO,KAAA2J,KAAAI,SAAA9I,IAAAN,GAEA,UAAAA,IACAqN,EAAAhO,KAAA0J,UAAA,GAAA2D,OACAnH,EAAA5B,kBAAA0J,EAAAhO,KAAA0J,UAAA,GAAA2D,OAAAiB,GACAN,EAAAhO,KAAA0J,UAAA,GAAA2D,OACAnH,EAAA5B,kBAAA0J,EAAAhO,KAAA0J,UAAA,GAAA2D,OAAAkB,GACAP,EAAAhO,KAAA0J,UAAA,GAAA2D,OACAnH,EAAA5B,kBAAA0J,EAAAhO,KAAA0J,UAAA,GAAA2D,OAAAmB,IAEA,IAAAP,EAAAD,EAAAhO,KAAA0J,UAAA,GAAA2D,OACAa,EAAAF,EAAAhO,KAAA0J,UAAA,GAAA2D,OACAqB,EAAAV,EAAAhO,KAAA0J,UAAA,GAAA2D,OACA,iBAAAY,EACAjO,KAAAwJ,UAAA1E,IAAAnE,EAAAX,KAAAmO,sBAAAF,EAAAC,EAAAQ,IAGA1O,KAAAwJ,UAAA1E,IAAAnE,EAAAX,KAAAoO,oBAAAH,EAAAC,EAAAQ,KAIApM,sBAAAqB,EAAAD,EAAAjD,GAOA,OAAgBqJ,QAJhBpG,EAAAjD,IAFAT,KAAA0J,UAAA,GAAAiD,IAAAnK,EAAAxC,KAAA0J,UAAA,GAAAiD,IAAAnK,IAEAmB,EAAAlD,IADAT,KAAA0J,UAAA,GAAAiD,IAAAnK,EAAAxC,KAAA0J,UAAA,GAAAiD,IAAAnK,GACAxC,KAAA,QAIgBsN,QADhB5J,EAAAjD,IAFAT,KAAA0J,UAAA,GAAAiD,IAAApK,EAAAvC,KAAA0J,UAAA,GAAAiD,IAAApK,IAEAoB,EAAAlD,IADAT,KAAA0J,UAAA,GAAAiD,IAAApK,EAAAvC,KAAA0J,UAAA,GAAAiD,IAAApK,GACAvC,KAAA,SAGAsC,oBAAAqB,EAAAD,EAAAjD,GACA,MAAAkO,EAAA3O,KAAA0J,UAAA,GAAAiD,IAAAnK,EAAAxC,KAAA0J,UAAA,GAAAiD,IAAAnK,EACAoM,EAAA5O,KAAA0J,UAAA,GAAAiD,IAAAnK,EAAAxC,KAAA0J,UAAA,GAAAiD,IAAAnK,EACAqM,EAAAnL,EAAAL,IAAA5C,GACAqO,EAAAnL,EAAAN,IAAA5C,GACAqJ,EAAA+E,EAAA5L,MAAA0L,GAAAtL,IAAAyL,EAAA7L,MAAA2L,IAAA3L,MAAAjD,KAAA6N,SACAkB,EAAA/O,KAAA0J,UAAA,GAAAiD,IAAApK,EAAAvC,KAAA0J,UAAA,GAAAiD,IAAApK,EACAyM,EAAAhP,KAAA0J,UAAA,GAAAiD,IAAApK,EAAAvC,KAAA0J,UAAA,GAAAiD,IAAApK,EAEA,OAAgBuH,SAAAwD,OADhBuB,EAAA5L,MAAA8L,GAAA1L,IAAAyL,EAAA7L,MAAA+L,IAAA/L,MAAAjD,KAAA8N,0CC1DA,SAAAmB,EAAAzO,GACA,QAAA0B,KAAA1B,EAAAb,EAAAsC,eAAAC,KAAAvC,EAAAuC,GAAA1B,EAAA0B,IAEApB,OAAAC,eAAApB,EAAA,cAA8C0B,OAAA,IAC9C4N,EAAS/O,EAAQ,IACjB+O,EAAS/O,EAAQ,KACjB+O,EAAS/O,EAAQ,KACjB+O,EAAS/O,EAAQ,KACjB+O,EAAS/O,EAAQ,IACjB+O,EAAS/O,EAAQ,IACjB+O,EAAS/O,EAAQ,IACjB+O,EAAS/O,EAAQ,KACjB+O,EAAS/O,EAAQ,KACjB+O,EAAS/O,EAAQ,IACjB+O,EAAS/O,EAAQ,IACjB+O,EAAS/O,EAAQ,IACjB+O,EAAS/O,EAAQ,KACjB+O,EAAS/O,EAAQ,IACjB+O,EAAS/O,EAAQ,IACjB+O,EAAS/O,EAAQ,IACjB+O,EAAS/O,EAAQ,KACjB+O,EAAS/O,EAAQ,KACjB+O,EAAS/O,EAAQ,mCCtBjBY,OAAAC,eAAApB,EAAA,cAA8C0B,OAAA,IAC9C,MAAA6N,EAAiBhP,EAAQ,GACzBiP,EAAejP,EAAQ,IACvBgG,EAAoBhG,EAAQ,GAC5BiH,EAAkBjH,EAAQ,GAC1BiG,EAAejG,EAAQ,GACvBkP,EAA+BlP,EAAQ,IACvCmP,EAA+BnP,EAAQ,IACvC,IAAAoP,GACA,SAAAA,GACAA,IAAA,mBACAA,IAAA,iBACAA,IAAA,yBAHA,CAICA,EAAA3P,EAAA2P,cAAA3P,EAAA2P,iBAsQD3P,EAAA4P,sBArQAL,EAAA9I,OACA9D,YAAA+D,EAAAC,EAAAkJ,EAAAC,GACA7B,MAAAvH,EAAAC,GACAtG,KAAA0P,QAAAF,EACAxP,KAAA2P,aAAAF,GACAzP,KAAA4P,qBAAAzI,EAAAY,QAAA8H,YAAAxJ,EAAAC,GAEAhE,kBACAtC,KAAA8P,SAAAC,aACA/P,KAAAgQ,cAAA,IAAA/H,aAAAjI,KAAAuG,OAAAvG,KAAAwG,SACAxG,KAAAgQ,cAAA3H,KAAA4H,MAGA3N,aAAA4N,MACAlQ,KAAA8P,SAAAhP,OAAAqP,QAAuCJ,YAAA,EAAAK,kBAAA,GAA2CF,QAClFnK,IAAA/F,KAAA0P,QAAAW,MACArQ,KAAA0P,QAAAW,KAAArQ,KAAAuG,OAAAvG,KAAAwG,SAEAxG,KAAAsQ,kBAEAhO,sBAAAiO,GACA,MAAAC,EAAAxQ,KAAAyQ,SAAAC,cAAAH,GAEA3N,EAAA5C,KAAA4P,qBAAAe,UAAAH,GACAI,EAAA,IAAAzK,EAAA9D,KAAAO,EAAAL,EAAAK,EAAAF,EAAAE,EAAAJ,EAAAI,EAAAF,EAAAE,EAAAH,EAAAG,EAAAF,EAAA,EAAAE,EAAAF,GAGA,OADA6N,EAAAxG,SAAA8G,MAAAD,GAEAjE,IAAAiE,EACA7G,SAAAwG,EAAAxG,SACAsD,MAAAkD,EAAAlD,OAGA/K,oBAAAC,EAAAC,EAAAsO,GAKA,GAAA9Q,KAAA8P,SAAAC,WAAA,CACA,MAAAhJ,EAAAxE,EAAAC,EAAAxC,KAAAuG,OACA,GAAAuK,EAAA9Q,KAAAgQ,cAAAjJ,GACA,SACA/G,KAAAgQ,cAAAjJ,GAAA+J,EAEA,SAGAxO,UAAAE,EAAAuO,EAAAC,GACAxO,EAAAM,KAAA4J,KAAAlK,GACA,MAAAyO,EAAAnO,KAAA4J,KAAAqE,EAAAxO,GACA2O,EAAApO,KAAA4J,KAAAsE,EAAAzO,GACA6K,EAAA6D,EAAAF,EAAAxO,EACAvC,KAAAmR,cAAAJ,EAAA3D,GACApN,KAAAoR,qBACA,MAAAzE,EAAA3M,KAAAqR,kBAAAtH,SAAA9I,IAAA,SACA,IAAAwB,EACA,QAAAF,EAAA0O,EAA2B1O,EAAA2O,EAAW3O,IAAA,CAEtCvC,KAAAqR,kBAAAC,MAAA3E,GACAlK,EAAA,EAAAkK,EAAA9C,QAAAnH,EACA,UAAA/B,KAAAX,KAAAuR,cAAA9C,aAAA,CACA,aAAA9N,EACA,SACA,MAAAiJ,EAAA5J,KAAAqR,kBAAAtH,SAAA9I,IAAAN,GAEAX,KAAAoR,kBAAAzQ,GAAAuF,EAAA5B,kBAAAtE,KAAAqR,kBAAAC,MAAA1H,GAAAnH,GAEAzC,KAAAwR,oBAAAjP,EAAAC,EAAAmK,EAAA9C,QAAApH,IAEAzC,KAAAyR,KAAAlP,EAAAC,EAAAxC,KAAAyQ,SAAAiB,gBAAA1R,KAAAoR,kBAAApR,KAAAuR,cAAAI,YAGArP,cAAAyO,EAAA3D,GAEA,UAAAzM,KAAAX,KAAAuR,cAAA9C,aAAA,CACA,MAAA7E,EAAA5J,KAAAqR,kBAAAtH,SAAA9I,IAAAN,GAEAiJ,EAAAC,QAAA3D,EAAA9B,gBAAA2M,EAAAhH,SAAA9I,IAAAN,GAAAkJ,QAAA3D,EAAA5B,kBAAAsF,EAAAE,OAAAsD,KAGA9K,YAAAsP,GACA,MAAAtF,EAAAsF,EAAAtF,KACAC,EAAAqF,EAAArF,GACAsF,EAAA/O,KAAA4J,KAAAJ,EAAAK,IAAApK,GACAuP,EAAAhP,KAAA4J,KAAAJ,EAAAK,IAAAnK,GACAuP,EAAAjP,KAAA4J,KAAAH,EAAAI,IAAApK,GACAyP,EAAAlP,KAAA4J,KAAAH,EAAAI,IAAAnK,GACAyP,EAAAnP,KAAAU,IAAAuO,EAAAF,GACAK,EAAApP,KAAAU,IAAAwO,EAAAF,GACAK,EAAAN,EAAAE,EAAA,KACAK,EAAAN,EAAAE,EAAA,KACA,IAAA1O,EAAA2O,EAAAC,EACAlS,KAAAqR,kBAAAO,EAAApF,SACA,MAAAY,EAAAyE,EAAAvF,EAAAK,IAAApK,EACAvC,KAAAmR,cAAAS,EAAAxE,GACA,IAAA7K,EAAAsP,EACArP,EAAAsP,EACA,MAAA/H,KACA,KAAAxH,IAAAwP,GAAAvP,IAAAwP,GAAA,CAEA,UAAArR,EAAAiJ,KAAA5J,KAAAqR,kBAAAtH,SACA/J,KAAAqR,kBAAAC,MAAA1H,GACAG,EAAApJ,GAAAiJ,EAAAC,QAKA,MAAAwI,EAAA,EAAA/O,EACA+O,GAAAH,IACA5O,GAAA4O,EACA3P,GAAA4P,GAEAE,EAAAJ,IACA3O,GAAA2O,EACAzP,GAAA4P,IAIA9P,WAAAgQ,EAAAC,GACA,QAAAnS,EAAAkS,EAA2BlS,EAAAkS,EAAAC,EAAmBnS,GAAA,GAC9C,MAAAuD,EAAA3D,KAAAwS,sBAAAxS,KAAAuR,cAAAkB,GAAArS,IACAsD,EAAA1D,KAAAwS,sBAAAxS,KAAAuR,cAAAkB,GAAArS,EAAA,IACAJ,KAAA0S,YAAA,IAAAvD,EAAA9C,KAAA1I,EAAAD,EAAA,IAAA0L,EAAAzB,qBAAAhK,EAAAD,EAAA1D,KAAAuR,kBAGAjP,kBAAAgQ,EAAAC,GACA,MAAAI,EAAA3S,KAAAuR,cAAAoB,QACA,QAAAvS,EAAAkS,EAA2BlS,EAAAkS,EAAAC,EAAmBnS,GAAA,GAC9C,MAAAuD,EAAA3D,KAAAwS,sBAAAxS,KAAAuR,cAAAkB,GAAAE,EAAAvS,KACAsD,EAAA1D,KAAAwS,sBAAAxS,KAAAuR,cAAAkB,GAAAE,EAAAvS,EAAA,KACAJ,KAAA0S,YAAA,IAAAvD,EAAA9C,KAAA1I,EAAAD,EAAA,IAAA0L,EAAAzB,qBAAAhK,EAAAD,EAAA1D,KAAAuR,kBAGAjP,eAAAgQ,EAAAC,EAAAK,GACA,QAAAxS,EAAAkS,EAA2BlS,EAAAkS,EAAAC,EAAmBnS,GAAA,GAC9C,MAAAuD,EAAA3D,KAAAwS,sBAAAxS,KAAAuR,cAAAkB,GAAArS,IACAsD,EAAA1D,KAAAwS,sBAAAxS,KAAAuR,cAAAkB,GAAArS,EAAA,IACAK,EAAAT,KAAAwS,sBAAAxS,KAAAuR,cAAAkB,GAAArS,EAAA,IACAwS,EACA5S,KAAA6S,gBAAAlP,EAAAD,EAAAjD,GAGAT,KAAA8S,cAAAnP,EAAAD,EAAAjD,IAIA6B,sBAAAgQ,EAAAC,EAAAK,GACA,MAAAD,EAAA3S,KAAAuR,cAAAoB,QACA,QAAAvS,EAAAkS,EAAAC,EAAA,EAAuCnS,GAAA,EAAQA,GAAA,GAC/C,MAAAuD,EAAA3D,KAAAwS,sBAAAxS,KAAAuR,cAAAkB,GAAAE,EAAAvS,EAAA,KACAsD,EAAA1D,KAAAwS,sBAAAxS,KAAAuR,cAAAkB,GAAAE,EAAAvS,EAAA,KACAK,EAAAT,KAAAwS,sBAAAxS,KAAAuR,cAAAkB,GAAAE,EAAAvS,KACAwS,EACA5S,KAAA6S,gBAAAlP,EAAAD,EAAAjD,GAGAT,KAAA8S,cAAAnP,EAAAD,EAAAjD,IAIA6B,gBAAAqB,EAAAD,EAAAjD,GACAT,KAAA0S,YAAA,IAAAvD,EAAA9C,KAAA1I,EAAAD,EAAA,IAAA0L,EAAAzB,qBAAAhK,EAAAD,EAAA1D,KAAAuR,iBACAvR,KAAA0S,YAAA,IAAAvD,EAAA9C,KAAA1I,EAAAlD,EAAA,IAAA2O,EAAAzB,qBAAAhK,EAAAlD,EAAAT,KAAAuR,iBACAvR,KAAA0S,YAAA,IAAAvD,EAAA9C,KAAA3I,EAAAjD,EAAA,IAAA2O,EAAAzB,qBAAAjK,EAAAjD,EAAAT,KAAAuR,iBAEAjP,cAAAqB,EAAAD,EAAAjD,GAEA,GAAAT,KAAA8P,SAAAM,kBAAAlK,EAAA/B,kBAAAR,EAAAgJ,IAAAjJ,EAAAiJ,IAAAlM,EAAAkM,KAAA,EACA,OAEA,IAAAoG,GAAA,EAEAtS,EAAAkM,IAAAnK,EAAAkB,EAAAiJ,IAAAnK,KACA/B,EAAAiD,MAAAjD,GACAsS,MAEArP,EAAAiJ,IAAAnK,EAAAmB,EAAAgJ,IAAAnK,KACAkB,EAAAC,MAAAD,GACAqP,MAEAtS,EAAAkM,IAAAnK,EAAAkB,EAAAiJ,IAAAnK,KACA/B,EAAAiD,MAAAjD,GACAsS,MAEA,MAAAvG,EAAA,IAAA6C,EAAAhB,qBAAA1K,EAAAD,EAAAjD,EAAAT,KAAAuR,eACAvR,KAAAqR,kBAAA7E,EACA,MAAAwG,EAAA,IAAA7D,EAAA9C,KAAA1I,EAAAlD,EAAA+L,GACAxM,KAAAiT,WAAAD,EAAA,IAAA7D,EAAA9C,KAAA1I,EAAAD,EAAA8I,GAAAuG,GACA/S,KAAAiT,WAAAD,EAAA,IAAA7D,EAAA9C,KAAA3I,EAAAjD,EAAA+L,GAAAuG,GAEAzQ,WAAA0Q,EAAAE,EAAAH,GACA,IAAAhC,EAAAiC,EACAhC,EAAAkC,EACA,MAAA1F,EAAA0F,EAAA1F,QACAC,EAAAyF,EAAAzF,MACAsF,KACAhC,EAAAC,MAAAD,IACA,QAAAvO,EAAAgL,EAA6BhL,EAAAiL,EAAWjL,IACxCxC,KAAAmT,UAAA3Q,EAAAuO,EAAAC,GACAD,EAAAxD,OACAyD,EAAAzD,OAGAjL,WAAAf,EAAA+Q,EAAAC,EAAAK,GAAA,GACA,OAAArR,GACA,KAAA+N,EAAA8D,MACApT,KAAAqT,WAAAf,EAAAC,GACA,MACA,KAAAjD,EAAAgE,UACAtT,KAAAuT,eAAAjB,EAAAC,EAAAK,GACA,MACA,QACA,UAAAhL,sBAAgDrG,yBAEhDvB,KAAAwT,OAEAlR,aAAAf,EAAA+Q,EAAAC,EAAAK,GAAA,GACA,IAAA5S,KAAAuR,cAAAkC,QACA,UAAA7L,MAAA,mEAEA,OAAArG,GACA,KAAA+N,EAAA8D,MACApT,KAAA0T,kBAAApB,EAAAC,GACA,MACA,KAAAjD,EAAAgE,UACAtT,KAAA2T,sBAAArB,EAAAC,EAAAK,GACA,MACA,QACA,UAAAhL,sBAAgDrG,yBAEhDvB,KAAAwT,OAEAlR,WAAAsR,GACA5T,KAAAyQ,SAAAmD,EAEAtR,gBAAAgH,GACAtJ,KAAAuR,cAAAjI,EAEAhH,oBACAtC,KAAA8P,SAAAC,YACA/P,KAAAgQ,cAAA3H,KAAA4H,KAGA3N,eACAtC,KAAA6T,oBAEAvR,OACAtC,KAAA0P,QAAA8D,KAAAxT,MAEAyP,cACA,OAAAzP,KAAA8P,SAEAxN,OAAA+D,EAAAC,GACAsH,MAAAkG,OAAAzN,EAAAC,GACAtG,KAAAsQ,kBACAtQ,KAAA4P,qBAAAzI,EAAAY,QAAA8H,YAAAxJ,EAAAC,QACAP,IAAA/F,KAAA0P,QAAAoE,QACA9T,KAAA0P,QAAAoE,OAAAzN,EAAAC,mCC/QAxF,OAAAC,eAAApB,EAAA,cAA8C0B,OAAA,IAY9C1B,EAAAoU,YAVAzR,cACAtC,KAAAgU,UAAAC,KAAAC,MAEA5R,WACA,MAAA4R,EAAAD,KAAAC,MACAC,EAAAD,EAAAlU,KAAAgU,UAEA,OADAhU,KAAAgU,UAAAE,EACAC,kCCTArT,OAAAC,eAAApB,EAAA,cAA8C0B,OAAA,IAC9C,MAAA2F,EAAe9G,EAAQ,GACvB+G,EAAe/G,EAAQ,GACvBiF,EAAwBjF,EAAQ,IAEhC,SAAAkU,GACA,MAAAC,EAAAC,IAEA,MAAAC,EAAAD,EAAAE,OAAA,GAAA/O,MAAA,KAAAC,IAAAnD,GAAAkS,WAAAlS,IACA,WAAA0E,EAAAO,KAAA+M,EAAA,KAAAA,EAAA,GAAAA,EAAA,KAEAG,EAAAJ,IAEA,MAAAK,EAAAL,EAAAE,OAAA,GAAA/O,MAAA,KAAAC,IAAAnD,GAAAkS,WAAAlS,IACA,WAAAyE,EAAAM,KAAAqN,EAAA,GAAAA,EAAA,KAEAC,EAAAN,IAEA,MAAAC,EAAAD,EAAAE,OAAA,GAAA/O,MAAA,KAAAC,IAAAnD,GAAAkS,WAAAlS,IACA,WAAA0E,EAAAO,KAAA+M,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAH,EAAAS,SAAA,CAAAC,IACA,MAAAC,EAAAD,EAAArP,MAAA,MACA8D,KACAoL,KACAK,KACArC,KACAsC,EAAA,IAAAxL,IACA,IAAAyL,EAAA,EACA,MAAAC,GACA5L,YACAoJ,QAAA,KACAyC,YACAC,MACAC,WAEAC,cACAtR,IAAAkB,EAAAoC,KAAA0I,KACA/L,IAAAiB,EAAAoC,KAAA,KAGA,QAAA+M,KAAAS,EAEA,QADAT,IAAAkB,QACAC,OAAA,IACA,QACA,OAAAnB,EAAAmB,OAAA,IACA,QACA,MAAA7S,EAAAyR,EAAAC,GACA1R,EAAAL,EAAA4S,EAAAI,aAAArR,IAAA3B,IACA4S,EAAAI,aAAArR,IAAA3B,EAAAK,EAAAL,GAEAK,EAAAJ,EAAA2S,EAAAI,aAAArR,IAAA1B,IACA2S,EAAAI,aAAArR,IAAA1B,EAAAI,EAAAJ,GAEAI,EAAAH,EAAA0S,EAAAI,aAAArR,IAAAzB,IACA0S,EAAAI,aAAArR,IAAAzB,EAAAG,EAAAH,GAEAG,EAAAL,EAAA4S,EAAAI,aAAAtR,IAAA1B,IACA4S,EAAAI,aAAAtR,IAAA1B,EAAAK,EAAAL,GAEAK,EAAAJ,EAAA2S,EAAAI,aAAAtR,IAAAzB,IACA2S,EAAAI,aAAAtR,IAAAzB,EAAAI,EAAAJ,GAEAI,EAAAH,EAAA0S,EAAAI,aAAAtR,IAAAxB,IACA0S,EAAAI,aAAAtR,IAAAxB,EAAAG,EAAAH,GAEA8G,EAAAmM,KAAA9S,GACA,MACA,QACA+R,EAAAe,KAAAhB,EAAAJ,IACA,MACA,QACAU,EAAAU,KAAAd,EAAAN,IAGA,MACA,QAEA,MAAAqB,EAAArB,EAAAE,OAAA,GAAA/O,MAAA,KACA,IAAAmQ,KACA,UAAAC,KAAAF,EAAA,CACA,GAAAV,EAAA1J,IAAAsK,GAAA,CACAD,EAAAF,KAAAT,EAAAhU,IAAA4U,IACA,SAEA,MAAAC,EAAAC,EAAAC,GAAAH,EAAApQ,MAAA,KAAAC,IAAAnD,GAAA0T,SAAA1T,GAAA,GACA4S,EAAA5L,SAAAmM,KAAAnM,EAAAuM,SACA/P,IAAAgQ,GACAZ,EAAAC,WAAAC,GAAAK,KAAAf,EAAAoB,SACAhQ,IAAAiQ,GACAb,EAAAC,WAAAE,OAAAI,KAAAV,EAAAgB,IACAf,EAAAnQ,IAAA+Q,EAAAX,GACAU,EAAAF,KAAAR,GACAA,IAGA,OAAAS,EAAA3Q,OAAA,CACA,MAAAkR,EAAAN,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAM,EACAN,EAAA,GAAAA,EAAA,GAEAjD,EAAA+C,QAAAE,GAMA,OAFAT,EAAAxC,QAAAuC,EAAA,QAAAiB,WAAAxD,GACAuC,EAAA,UAAAkB,YAAAzD,GAAA,IAAA0D,YAAA1D,GACAwC,IAvGA,CAoHCxV,EAAAyU,cAAAzU,EAAAyU,+CCzHDtT,OAAAC,eAAApB,EAAA,cAA8C0B,OAAA,IAC9C,MAAA6N,EAAiBhP,EAAQ,GASzBP,EAAA2W,sBARApH,EAAA9I,OACA9D,YAAA+D,EAAAC,GACAsH,MAAAvH,EAAAC,GAEAhE,GAAA+S,GACA,OAAAzH,MAAA2I,KAAAzT,KAAA8H,MAAAyK,EAAA9S,EAAAvC,KAAAuG,QAAAzD,KAAA8H,MAAAyK,EAAA7S,EAAAxC,KAAAwG,0CCPA1F,OAAAC,eAAApB,EAAA,cAA8C0B,OAAA,UAC9CmV,EACAlU,YAAAiH,GACAvJ,KAAA0J,UAAAH,EACAvJ,KAAAyW,YAAA,IAAAhN,IACAzJ,KAAAwJ,UAAA,IAAAC,IAEAzJ,KAAA8M,kBACA9M,KAAA0W,aACA1W,KAAA2W,aAAA,EACA3W,KAAA4W,oBAAA,IAAA5Q,UACA/E,IAAA,CAAA4V,EAAAxR,KACA,mCAAAA,EAAA,CACA,GAAArF,KAAAyW,YAAAlL,IAAAlG,GACA,OAAArF,KAAAyW,YAAAxV,IAAAoE,GAAArF,KAAA2W,cAGA,UAAA/O,8BAAgEvC,SAKhErF,KAAA8W,gBAAA,IAAA9Q,UACAlB,IAAA,CAAAiS,EAAA1R,EAAA2R,KACA,MAAAC,EAAAjX,KAAAwJ,UAAAvI,IAAAoE,GACA,QAAAU,IAAAkR,EAAA,CACA,MAAAC,KACAA,EAAAlX,KAAA2W,cAAAK,EACAhX,KAAAwJ,UAAA1E,IAAAO,EAAA6R,GACAlX,KAAA8M,eAAA4I,KAAArQ,QAGA4R,EAAAjX,KAAA2W,cAAAK,EAGA,OADAD,EAAA1R,GAAA2R,GACA,KAIA1U,GAAAyE,GAEA,OADA/G,KAAA2W,aAAA5P,GAEAoQ,SAAAnX,KAAA0J,UAAA3C,GACAqO,WAAApV,KAAA4W,oBACAjF,SAAA3R,KAAA0W,UACA3M,SAAA/J,KAAA8W,gBACAzJ,MAAAtG,GAGAzE,aAAA3B,EAAAgH,GACA,GAAAA,EAAA3C,OAAAhF,KAAA0J,UAAA1E,OACA,UAAA4C,uCAA6DjH,KAE7DX,KAAAyW,YAAA3R,IAAAnE,EAAAgH,GAEArF,WAAA3B,EAAAU,GACArB,KAAA0W,UAAA/V,GAAAU,EAEAiB,UACA,YAAAyD,IAAA/F,KAAAoX,SAEAzE,cACA,OAAA3S,KAAAoX,SAEAzE,eACA3S,KAAAoX,SAAAzE,EAEA5I,eACA,OAAA/J,KAAAwJ,UAEAiF,mBACA,OAAAzO,KAAA8M,eAEA6E,eACA,OAAA3R,KAAA0W,UAEApU,iBAAA+U,GACA,MAAA/N,EAAA,IAAAkN,EAAAa,EAAA9N,eACAxD,IAAAsR,EAAA1E,UACArJ,EAAAqJ,QAAA0E,EAAA1E,SAEA,UAAA2E,KAAAD,EAAAjC,WAAA,CACA,MAAAmC,EAAAF,EAAAjC,WAAAkC,QACAvR,IAAAwR,GACAjO,EAAAkO,aAAAF,EAAAC,GAGA,OAAAjO,EAEAmO,kBACA,OAAAzX,KAAA0J,UAAA1E,QAGArF,EAAA6W","file":"suzanne.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"suz\"] = factory();\n\telse\n\t\troot[\"suz\"] = factory();\n})((typeof window !== 'undefined' ? window : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Vector_1 = require(\"./Vector\");\nclass Vec4 {\n    constructor(x = 0, y = 0, z = 0, w = 1) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n        this.dims = 4;\n    }\n    add(v) {\n        return new Vec4(this.x + v.x, this.y + v.y, this.z + v.z, this.w + v.w);\n    }\n    sub(v) {\n        return new Vec4(this.x - v.x, this.y - v.y, this.z - v.z, this.w - v.w);\n    }\n    mul(v) {\n        return new Vec4(this.x * v.x, this.y * v.y, this.z * v.z, this.w * v.w);\n    }\n    times(k) {\n        return new Vec4(this.x * k, this.y * k, this.z * k, this.w * k);\n    }\n    div(v) {\n        return new Vec4(this.x / v.x, this.y / v.y, this.z / v.z, this.w / v.w);\n    }\n    dot(v) {\n        return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n    }\n    mag() {\n        return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2) + Math.pow(this.z, 2) + Math.pow(this.w, 2));\n    }\n    normalize() {\n        return this.times(1 / this.mag());\n    }\n    reflect(N) {\n        return N.times(2 * this.dot(N)).sub(this);\n    }\n    addTimes(v, k) {\n        return new Vec4(this.x + v.x * k, this.y + v.y * k, this.z + v.z * k, this.w + v.w * k);\n    }\n    equals(v, eps = Vector_1.EPS) {\n        return Math.abs(this.x - v.x) < eps &&\n            Math.abs(this.y - v.y) < eps &&\n            Math.abs(this.z - v.z) < eps &&\n            Math.abs(this.w - v.w) < eps;\n    }\n    get r() {\n        return this.x;\n    }\n    set r(r) {\n        this.x = r;\n    }\n    get g() {\n        return this.y;\n    }\n    set g(g) {\n        this.y = g;\n    }\n    get b() {\n        return this.z;\n    }\n    set b(b) {\n        this.z = b;\n    }\n    get a() {\n        return this.w;\n    }\n    set a(a) {\n        this.w = a;\n    }\n}\nexports.Vec4 = Vec4;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.degrees = (angle_radians) => {\n    return (angle_radians * 57.29577951308232) % 360;\n};\nexports.radians = (angle_degrees) => {\n    return (angle_degrees * 0.017453292519943295) % 6.283185307179586;\n};\nexports.clamp = (x, min, max) => {\n    return Math.max(Math.min(x, max), min);\n};\nfunction parallelogramArea(a, b, c) {\n    return (b.x - a.x) * (c.y - a.y) - (c.x - a.x) * (b.y - a.y);\n}\nexports.parallelogramArea = parallelogramArea;\nfunction interpolableAdd(a, b) {\n    if (typeof a === 'number') {\n        return (a + b);\n    }\n    else {\n        return a.add(b);\n    }\n}\nexports.interpolableAdd = interpolableAdd;\nfunction interpolableTimes(a, k) {\n    if (typeof a === 'number') {\n        return (a * k);\n    }\n    else {\n        return a.times(k);\n    }\n}\nexports.interpolableTimes = interpolableTimes;\nfunction interpolableMul(a, b) {\n    if (typeof a === 'number') {\n        return (a * b);\n    }\n    else {\n        return a.mul(b);\n    }\n}\nexports.interpolableMul = interpolableMul;\nfunction interpolableAddTimes(a, b, k) {\n    if (typeof a === 'number') {\n        return ((a + b * k));\n    }\n    else {\n        return a.addTimes(b, k);\n    }\n}\nexports.interpolableAddTimes = interpolableAddTimes;\n/**\n * Fill a TypedArray with a sequence of elements in O(log(dest.length)) time\n *\n * @export\n * @template T\n * @param {T} dest the destination TypedArray\n * @param {ArrayLike<number>} seq the sequence to repeat\n * @returns {T} the mutated dest TypedArray\n */\nfunction fillSequence(dest, seq) {\n    dest.set(seq);\n    const dest_len = dest.length;\n    let offset = seq.length;\n    while (offset < dest_len) {\n        dest.copyWithin(offset, 0, offset);\n        offset <<= 1;\n    }\n    return dest;\n}\nexports.fillSequence = fillSequence;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst VecShorthands_1 = require(\"./VecShorthands\");\nexports.EPS = Math.pow(10, -6);\nfunction swizzling_trap(v, prop) {\n    if (typeof prop !== 'string')\n        return undefined;\n    ///@ts-ignore\n    const default_get = v[prop];\n    if (default_get instanceof Function) {\n        return default_get;\n    }\n    const chars = prop.split('');\n    if (prop.length > 1 && prop.length < 5) { // && chars.every(char => 'xyzrgba'.includes(char))) { // && /[xyzwrgba]{1,4}/.test(prop)) {\n        ///@ts-ignore\n        const r = chars.map(char => v[char]);\n        return r.length === 1 ? r[0] : VecShorthands_1.vec(...r);\n    }\n    ///@ts-ignore\n    return default_get;\n}\n;\nfunction swizzle(v, sizzling_str) {\n    if (sizzling_str !== undefined) {\n        return swizzling_trap(v, sizzling_str);\n    }\n    return new Proxy(v, { get: swizzling_trap });\n}\nexports.swizzle = swizzle;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ColorUtils_1 = require(\"./Utils/ColorUtils\");\nconst MathUtils_1 = require(\"./Utils/MathUtils\");\nconst Vec4_1 = require(\"./Utils/Vector/Vec4\");\nclass Bitmap {\n    constructor(width, height) {\n        this._width = width;\n        this._height = height;\n        this._data = new Uint8ClampedArray(this._width * this._height * 4);\n    }\n    clear(color = ColorUtils_1.colors.black) {\n        MathUtils_1.fillSequence(this.data, [color.r * 255, color.g * 255, color.b * 255, color.a * 255]);\n    }\n    _set(x, y, color) {\n        const idx = (x + y * this._width) * 4;\n        this._data[idx] = color.r * 255;\n        this._data[idx + 1] = color.g * 255;\n        this._data[idx + 2] = color.b * 255;\n        this._data[idx + 3] = color.a * 255;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    resize(width, height) {\n        this._width = width;\n        this._height = height;\n        this._data = new Uint8ClampedArray(this._width * this._height * 4);\n    }\n    get data() {\n        return this._data;\n    }\n    read(x, y) {\n        const idx = (x + y * this._width) * 4;\n        return new Vec4_1.Vec4(this._data[idx] / 255, this._data[idx + 1] / 255, this._data[idx + 2] / 255, this._data[idx + 3] / 255);\n    }\n}\nexports.Bitmap = Bitmap;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Vec2_1 = require(\"./Vec2\");\nconst Vec3_1 = require(\"./Vec3\");\nconst Vec4_1 = require(\"./Vec4\");\nconst VecN_1 = require(\"./VecN\");\nconst Matrix4_1 = require(\"../Matrix4\");\nfunction vec2(...args) {\n    switch (args.length) {\n        case 0:\n            return new Vec2_1.Vec2(0, 0);\n        case 1:\n            if (typeof args[0] === 'number') {\n                return new Vec2_1.Vec2(args[0], args[0]);\n            }\n            return new Vec2_1.Vec2(args[0].x, args[0].y);\n        case 2:\n        default:\n            return new Vec2_1.Vec2(args[0], args[1]);\n    }\n}\nexports.vec2 = vec2;\nfunction vec3(...args) {\n    switch (args.length) {\n        case 0:\n            return new Vec3_1.Vec3(0, 0, 0);\n        case 1:\n            if (typeof args[0] === 'number') {\n                return new Vec3_1.Vec3(args[0], args[0], args[0]);\n            }\n            switch (args[0].dims) {\n                case 2:\n                    return new Vec4_1.Vec4(args[0].x, args[0].y, 0);\n                case 3:\n                case 4:\n                default:\n                    return new Vec3_1.Vec3(args[0].x, args[0].y, args[0].z);\n            }\n        case 2:\n            return new Vec3_1.Vec3(args[0], args[1], 0);\n        default:\n            return new Vec3_1.Vec3(args[0], args[1], args[2]);\n    }\n}\nexports.vec3 = vec3;\nfunction vec4(...args) {\n    switch (args.length) {\n        case 0:\n            return new Vec4_1.Vec4(0, 0, 0, 0);\n        case 1:\n            if (typeof args[0] === 'number') {\n                return new Vec4_1.Vec4(args[0], args[0], args[0], args[0]);\n            }\n            switch (args[0].dims) {\n                case 2:\n                    return new Vec4_1.Vec4(args[0].x, args[0].y, args[0].x, args[0].y);\n                case 3:\n                    return new Vec4_1.Vec4(args[0].x, args[0].y, args[0].z, 1);\n                case 4:\n                    return new Vec4_1.Vec4(args[0].x, args[0].y, args[0].x, args[0].y);\n                default:\n                    if (args[0] instanceof VecN_1.VecN) {\n                        const [x, y, z, w] = args[0].values;\n                        return new Vec4_1.Vec4(x, y, z, w);\n                    }\n                    throw new Error(`Unexpected vec4 argument: ${args[0]}`);\n            }\n        case 2:\n            if (args[0] instanceof Vec3_1.Vec3) {\n                const v = args[0];\n                return new Vec4_1.Vec4(v.x, v.y, v.z, args[1]);\n            }\n            else {\n                const [x, y] = args;\n                return new Vec4_1.Vec4(x, y, x, y);\n            }\n        case 3:\n            return new Vec4_1.Vec4(args[0], args[1], args[2], 1);\n        default:\n            return new Vec4_1.Vec4(args[0], args[1], args[2], args[3]);\n    }\n}\nexports.vec4 = vec4;\nexports.vecn = (...values) => new VecN_1.VecN(values);\nfunction vec(...values) {\n    switch (values.length) {\n        case 2:\n            return new Vec2_1.Vec2(values[0], values[1]);\n        case 3:\n            return new Vec3_1.Vec3(values[0], values[1], values[2]);\n        case 4:\n            return new Vec4_1.Vec4(values[0], values[1], values[2], values[3]);\n        default:\n            return new VecN_1.VecN(values);\n    }\n}\nexports.vec = vec;\nfunction mat4(...args) {\n    if (args.length === 0) {\n        return new Matrix4_1.Matrix4();\n    }\n    if (typeof args[0] === 'number') {\n        if (args.length === 1) {\n            return Matrix4_1.Matrix4.scale(args[0]);\n        }\n        if (args.length === 16) {\n            return new Matrix4_1.Matrix4(new Float32Array(args));\n        }\n    }\n    if (args[0] instanceof Float32Array) {\n        return new Matrix4_1.Matrix4(args[0]);\n    }\n    if (args[0] instanceof Vec4_1.Vec4 && args.length === 4) {\n        const [a, b, c, d] = args;\n        return new Matrix4_1.Matrix4(new Float32Array([\n            a.x, a.y, a.z, a.w,\n            b.x, b.y, b.z, b.w,\n            c.x, c.y, c.z, c.w,\n            d.x, d.y, d.z, d.w\n        ]));\n    }\n    throw new Error(`Unexpected arguments for mat4: ${args}`);\n}\nexports.mat4 = mat4;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Vector_1 = require(\"./Vector\");\nclass Vec2 {\n    constructor(x = 0, y = 0) {\n        this.x = x;\n        this.y = y;\n        this.dims = 2;\n    }\n    add(v) {\n        return new Vec2(this.x + v.x, this.y + v.y);\n    }\n    sub(v) {\n        return new Vec2(this.x - v.x, this.y - v.y);\n    }\n    mul(v) {\n        return new Vec2(this.x * v.x, this.y * v.y);\n    }\n    times(k) {\n        return new Vec2(this.x * k, this.y * k);\n    }\n    div(v) {\n        return new Vec2(this.x / v.x, this.y / v.y);\n    }\n    dot(v) {\n        return this.x * v.x + this.y * v.y;\n    }\n    mag() {\n        return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2));\n    }\n    normalize() {\n        return this.times(1 / this.mag());\n    }\n    reflect(N) {\n        return N.times(2 * this.dot(N)).sub(this);\n    }\n    addTimes(v, k) {\n        return new Vec2(this.x + v.x * k, this.y + v.y * k);\n    }\n    equals(v, eps = Vector_1.EPS) {\n        return Math.abs(this.x - v.x) < eps &&\n            Math.abs(this.y - v.y) < eps;\n    }\n}\nexports.Vec2 = Vec2;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Vector_1 = require(\"./Vector\");\nclass Vec3 {\n    constructor(x = 0, y = 0, z = 0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.dims = 3;\n    }\n    add(v) {\n        return new Vec3(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    sub(v) {\n        return new Vec3(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    mul(v) {\n        return new Vec3(this.x * v.x, this.y * v.y, this.z * v.z);\n    }\n    times(k) {\n        return new Vec3(this.x * k, this.y * k, this.z * k);\n    }\n    div(v) {\n        return new Vec3(this.x / v.x, this.y / v.y, this.z / v.z);\n    }\n    dot(v) {\n        return this.x * v.x + this.y * v.y + this.z * v.z;\n    }\n    mag() {\n        return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2) + Math.pow(this.z, 2));\n    }\n    normalize() {\n        return this.times(1 / this.mag());\n    }\n    reflect(N) {\n        return N.times(2 * this.dot(N)).sub(this);\n    }\n    addTimes(v, k) {\n        return new Vec3(this.x + v.x * k, this.y + v.y * k, this.z + v.z * k);\n    }\n    equals(v, eps = Vector_1.EPS) {\n        return Math.abs(this.x - v.x) < eps &&\n            Math.abs(this.y - v.y) < eps &&\n            Math.abs(this.z - v.z) < eps;\n    }\n    get r() {\n        return this.x;\n    }\n    set r(r) {\n        this.x = r;\n    }\n    get g() {\n        return this.y;\n    }\n    set g(g) {\n        this.y = g;\n    }\n    get b() {\n        return this.z;\n    }\n    set b(b) {\n        this.z = b;\n    }\n}\nexports.Vec3 = Vec3;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Vec4_1 = require(\"./Vector/Vec4\");\nclass Matrix4 {\n    constructor(coeffs) {\n        if (coeffs !== undefined) {\n            if (coeffs.length !== 16) {\n                throw new Error(`Matrix4 constructor requires a Float32Array with 16 elements, got ${coeffs.length}`);\n            }\n            this._m = coeffs;\n        }\n        else {\n            this._m = new Float32Array(16);\n            this.identity();\n        }\n    }\n    identity() {\n        this._m.fill(0);\n        this._m[0] = 1;\n        this._m[5] = 1;\n        this._m[10] = 1;\n        this._m[15] = 1;\n        return this;\n    }\n    fill(n) {\n        this._m.fill(n);\n    }\n    mul(m) {\n        const prod = new Matrix4();\n        const b = m._m;\n        prod._m[0] = this._m[0] * b[0] + this._m[1] * b[4] + this._m[2] * b[8] + this._m[3] * b[12];\n        prod._m[1] = this._m[0] * b[1] + this._m[1] * b[5] + this._m[2] * b[9] + this._m[3] * b[13];\n        prod._m[2] = this._m[0] * b[2] + this._m[1] * b[6] + this._m[2] * b[10] + this._m[3] * b[14];\n        prod._m[3] = this._m[0] * b[3] + this._m[1] * b[7] + this._m[2] * b[11] + this._m[3] * b[15];\n        prod._m[4] = this._m[4] * b[0] + this._m[5] * b[4] + this._m[6] * b[8] + this._m[7] * b[12];\n        prod._m[5] = this._m[4] * b[1] + this._m[5] * b[5] + this._m[6] * b[9] + this._m[7] * b[13];\n        prod._m[6] = this._m[4] * b[2] + this._m[5] * b[6] + this._m[6] * b[10] + this._m[7] * b[14];\n        prod._m[7] = this._m[4] * b[3] + this._m[5] * b[7] + this._m[6] * b[11] + this._m[7] * b[15];\n        prod._m[8] = this._m[8] * b[0] + this._m[9] * b[4] + this._m[10] * b[8] + this._m[11] * b[12];\n        prod._m[9] = this._m[8] * b[1] + this._m[9] * b[5] + this._m[10] * b[9] + this._m[11] * b[13];\n        prod._m[10] = this._m[8] * b[2] + this._m[9] * b[6] + this._m[10] * b[10] + this._m[11] * b[14];\n        prod._m[11] = this._m[8] * b[3] + this._m[9] * b[7] + this._m[10] * b[11] + this._m[11] * b[15];\n        prod._m[12] = this._m[12] * b[0] + this._m[13] * b[4] + this._m[14] * b[8] + this._m[15] * b[12];\n        prod._m[13] = this._m[12] * b[1] + this._m[13] * b[5] + this._m[14] * b[9] + this._m[15] * b[13];\n        prod._m[14] = this._m[12] * b[2] + this._m[13] * b[6] + this._m[14] * b[10] + this._m[15] * b[14];\n        prod._m[15] = this._m[12] * b[3] + this._m[13] * b[7] + this._m[14] * b[11] + this._m[15] * b[15];\n        return prod;\n    }\n    translate(v) {\n        const new_coeffs = new Float32Array(this._m);\n        new_coeffs[3] = this._m[3] + this._m[0] * v.x + this._m[1] * v.y + this._m[2] * v.z;\n        new_coeffs[7] = this._m[7] + this._m[4] * v.x + this._m[5] * v.y + this._m[6] * v.z;\n        new_coeffs[11] = this._m[11] + this._m[8] * v.x + this._m[9] * v.y + this._m[10] * v.z;\n        new_coeffs[15] = this._m[15] + this._m[12] * v.x + this._m[13] * v.y + this._m[14] * v.z;\n        this._m = new_coeffs;\n        return this;\n    }\n    rotateX(angle_rad) {\n        const new_coeffs = new Float32Array(16);\n        const c = Math.cos(angle_rad);\n        const s = Math.sin(angle_rad);\n        new_coeffs[0] = this._m[0];\n        new_coeffs[1] = this._m[1] * c + this._m[2] * s;\n        new_coeffs[2] = this._m[2] * c - this._m[1] * s;\n        new_coeffs[3] = this._m[3];\n        new_coeffs[4] = this._m[4];\n        new_coeffs[5] = this._m[5] * c + this._m[6] * s;\n        new_coeffs[6] = this._m[6] * c - this._m[5] * s;\n        new_coeffs[7] = this._m[7];\n        new_coeffs[8] = this._m[8];\n        new_coeffs[9] = this._m[9] * c + this._m[10] * s;\n        new_coeffs[10] = this._m[10] * c - this._m[9] * s;\n        new_coeffs[11] = this._m[11];\n        new_coeffs[12] = this._m[12];\n        new_coeffs[13] = this._m[13] * c + this._m[14] * s;\n        new_coeffs[14] = this._m[14] * c - this._m[13] * s;\n        new_coeffs[15] = this._m[15];\n        this._m = new_coeffs;\n        return this;\n    }\n    rotateY(angle_rad) {\n        const new_coeffs = new Float32Array(16);\n        const c = Math.cos(angle_rad);\n        const s = Math.sin(angle_rad);\n        new_coeffs[0] = this._m[0] * c - this._m[2] * s;\n        new_coeffs[1] = this._m[1];\n        new_coeffs[2] = this._m[2] * c + this._m[0] * s;\n        new_coeffs[3] = this._m[3];\n        new_coeffs[4] = this._m[4] * c - this._m[6] * s;\n        new_coeffs[5] = this._m[5];\n        new_coeffs[6] = this._m[6] * c + this._m[4] * s;\n        new_coeffs[7] = this._m[7];\n        new_coeffs[8] = this._m[8] * c - this._m[10] * s;\n        new_coeffs[9] = this._m[9];\n        new_coeffs[10] = this._m[10] * c + this._m[8] * s;\n        new_coeffs[11] = this._m[11];\n        new_coeffs[12] = this._m[12] * c - this._m[14] * s;\n        new_coeffs[13] = this._m[13];\n        new_coeffs[14] = this._m[14] * c + this._m[12] * s;\n        new_coeffs[15] = this._m[15];\n        this._m = new_coeffs;\n        return this;\n    }\n    rotateZ(angle_rad) {\n        const new_coeffs = new Float32Array(16);\n        const c = Math.cos(angle_rad);\n        const s = Math.sin(angle_rad);\n        new_coeffs[0] = this._m[0] * c + this._m[1] * s;\n        new_coeffs[1] = this._m[1] * c - this._m[0] * s;\n        new_coeffs[2] = this._m[2];\n        new_coeffs[3] = this._m[3];\n        new_coeffs[4] = this._m[4] * c + this._m[5] * s;\n        new_coeffs[5] = this._m[5] * c - this._m[4] * s;\n        new_coeffs[6] = this._m[6];\n        new_coeffs[7] = this._m[7];\n        new_coeffs[8] = this._m[8] * c + this._m[9] * s;\n        new_coeffs[9] = this._m[9] * c - this._m[8] * s;\n        new_coeffs[10] = this._m[10];\n        new_coeffs[11] = this._m[11];\n        new_coeffs[12] = this._m[12] * c + this._m[13] * s;\n        new_coeffs[13] = this._m[13] * c - this._m[12] * s;\n        new_coeffs[14] = this._m[14];\n        new_coeffs[15] = this._m[15];\n        this._m = new_coeffs;\n        return this;\n    }\n    transform(v) {\n        const w = v instanceof Vec4_1.Vec4 ? v.w : 1;\n        return new Vec4_1.Vec4(this._m[0] * v.x + this._m[1] * v.y + this._m[2] * v.z + this._m[3] * w, this._m[4] * v.x + this._m[5] * v.y + this._m[6] * v.z + this._m[7] * w, this._m[8] * v.x + this._m[9] * v.y + this._m[10] * v.z + this._m[11] * w, this._m[12] * v.x + this._m[13] * v.y + this._m[14] * v.z + this._m[15] * w);\n    }\n    det() {\n        return this._m[1] * this._m[11] * this._m[14] * this._m[4] - this._m[1] * this._m[10] * this._m[15] * this._m[4] - this._m[11] * this._m[13] * this._m[2] * this._m[4] + this._m[10] * this._m[13] * this._m[3] * this._m[4] -\n            this._m[0] * this._m[11] * this._m[14] * this._m[5] + this._m[0] * this._m[10] * this._m[15] * this._m[5] + this._m[11] * this._m[12] * this._m[2] * this._m[5] - this._m[10] * this._m[12] * this._m[3] * this._m[5] -\n            this._m[1] * this._m[11] * this._m[12] * this._m[6] + this._m[0] * this._m[11] * this._m[13] * this._m[6] + this._m[1] * this._m[10] * this._m[12] * this._m[7] - this._m[0] * this._m[10] * this._m[13] * this._m[7] -\n            this._m[15] * this._m[2] * this._m[5] * this._m[8] + this._m[14] * this._m[3] * this._m[5] * this._m[8] + this._m[1] * this._m[15] * this._m[6] * this._m[8] - this._m[13] * this._m[3] * this._m[6] * this._m[8] -\n            this._m[1] * this._m[14] * this._m[7] * this._m[8] + this._m[13] * this._m[2] * this._m[7] * this._m[8] + this._m[15] * this._m[2] * this._m[4] * this._m[9] - this._m[14] * this._m[3] * this._m[4] * this._m[9] -\n            this._m[0] * this._m[15] * this._m[6] * this._m[9] + this._m[12] * this._m[3] * this._m[6] * this._m[9] + this._m[0] * this._m[14] * this._m[7] * this._m[9] - this._m[12] * this._m[2] * this._m[7] * this._m[9];\n    }\n    invert() {\n        const d = this.det();\n        const inv = new Matrix4();\n        inv._m[0] = (-this._m[11] * this._m[14] * this._m[5] + this._m[10] * this._m[15] * this._m[5] + this._m[11] * this._m[13] * this._m[6] - this._m[10] * this._m[13] * this._m[7] - this._m[15] * this._m[6] * this._m[9] + this._m[14] * this._m[7] * this._m[9]) / d;\n        inv._m[1] = (this._m[1] * this._m[11] * this._m[14] - this._m[1] * this._m[10] * this._m[15] - this._m[11] * this._m[13] * this._m[2] + this._m[10] * this._m[13] * this._m[3] + this._m[15] * this._m[2] * this._m[9] - this._m[14] * this._m[3] * this._m[9]) / d;\n        inv._m[2] = (-this._m[15] * this._m[2] * this._m[5] + this._m[14] * this._m[3] * this._m[5] + this._m[1] * this._m[15] * this._m[6] - this._m[13] * this._m[3] * this._m[6] - this._m[1] * this._m[14] * this._m[7] + this._m[13] * this._m[2] * this._m[7]) / d;\n        inv._m[3] = (this._m[11] * this._m[2] * this._m[5] - this._m[10] * this._m[3] * this._m[5] - this._m[1] * this._m[11] * this._m[6] + this._m[1] * this._m[10] * this._m[7] + this._m[3] * this._m[6] * this._m[9] - this._m[2] * this._m[7] * this._m[9]) / d;\n        inv._m[4] = (this._m[11] * this._m[14] * this._m[4] - this._m[10] * this._m[15] * this._m[4] - this._m[11] * this._m[12] * this._m[6] + this._m[10] * this._m[12] * this._m[7] + this._m[15] * this._m[6] * this._m[8] - this._m[14] * this._m[7] * this._m[8]) / d;\n        inv._m[5] = (-this._m[0] * this._m[11] * this._m[14] + this._m[0] * this._m[10] * this._m[15] + this._m[11] * this._m[12] * this._m[2] - this._m[10] * this._m[12] * this._m[3] - this._m[15] * this._m[2] * this._m[8] + this._m[14] * this._m[3] * this._m[8]) / d;\n        inv._m[6] = (this._m[15] * this._m[2] * this._m[4] - this._m[14] * this._m[3] * this._m[4] - this._m[0] * this._m[15] * this._m[6] + this._m[12] * this._m[3] * this._m[6] + this._m[0] * this._m[14] * this._m[7] - this._m[12] * this._m[2] * this._m[7]) / d;\n        inv._m[7] = (-this._m[11] * this._m[2] * this._m[4] + this._m[10] * this._m[3] * this._m[4] + this._m[0] * this._m[11] * this._m[6] - this._m[0] * this._m[10] * this._m[7] - this._m[3] * this._m[6] * this._m[8] + this._m[2] * this._m[7] * this._m[8]) / d;\n        inv._m[8] = (-this._m[11] * this._m[13] * this._m[4] + this._m[11] * this._m[12] * this._m[5] - this._m[15] * this._m[5] * this._m[8] + this._m[13] * this._m[7] * this._m[8] + this._m[15] * this._m[4] * this._m[9] - this._m[12] * this._m[7] * this._m[9]) / d;\n        inv._m[9] = (-this._m[1] * this._m[11] * this._m[12] + this._m[0] * this._m[11] * this._m[13] + this._m[1] * this._m[15] * this._m[8] - this._m[13] * this._m[3] * this._m[8] - this._m[0] * this._m[15] * this._m[9] + this._m[12] * this._m[3] * this._m[9]) / d;\n        inv._m[10] = (-this._m[1] * this._m[15] * this._m[4] + this._m[13] * this._m[3] * this._m[4] + this._m[0] * this._m[15] * this._m[5] - this._m[12] * this._m[3] * this._m[5] + this._m[1] * this._m[12] * this._m[7] - this._m[0] * this._m[13] * this._m[7]) / d;\n        inv._m[11] = (this._m[1] * this._m[11] * this._m[4] - this._m[0] * this._m[11] * this._m[5] + this._m[3] * this._m[5] * this._m[8] - this._m[1] * this._m[7] * this._m[8] - this._m[3] * this._m[4] * this._m[9] + this._m[0] * this._m[7] * this._m[9]) / d;\n        inv._m[12] = (this._m[10] * this._m[13] * this._m[4] - this._m[10] * this._m[12] * this._m[5] + this._m[14] * this._m[5] * this._m[8] - this._m[13] * this._m[6] * this._m[8] - this._m[14] * this._m[4] * this._m[9] + this._m[12] * this._m[6] * this._m[9]) / d;\n        inv._m[13] = (this._m[1] * this._m[10] * this._m[12] - this._m[0] * this._m[10] * this._m[13] - this._m[1] * this._m[14] * this._m[8] + this._m[13] * this._m[2] * this._m[8] + this._m[0] * this._m[14] * this._m[9] - this._m[12] * this._m[2] * this._m[9]) / d;\n        inv._m[14] = (this._m[1] * this._m[14] * this._m[4] - this._m[13] * this._m[2] * this._m[4] - this._m[0] * this._m[14] * this._m[5] + this._m[12] * this._m[2] * this._m[5] - this._m[1] * this._m[12] * this._m[6] + this._m[0] * this._m[13] * this._m[6]) / d;\n        inv._m[15] = (-this._m[1] * this._m[10] * this._m[4] + this._m[0] * this._m[10] * this._m[5] - this._m[2] * this._m[5] * this._m[8] + this._m[1] * this._m[6] * this._m[8] + this._m[2] * this._m[4] * this._m[9] - this._m[0] * this._m[6] * this._m[9]) / d;\n        return inv;\n    }\n    static scale(...args) {\n        let x, y, z;\n        if (args.length === 1) {\n            if (typeof args[0] === 'number') {\n                x = args[0];\n                y = x;\n                z = x;\n            }\n            else {\n                x = args[0].x;\n                y = args[0].y;\n                z = args[0].z;\n            }\n        }\n        const m = new Matrix4();\n        m._m[0] = x;\n        m._m[5] = y;\n        m._m[10] = z;\n        m._m[15] = 1;\n        return m;\n    }\n    static perspective(fov_rads, aspect_ratio, near, far) {\n        const m = new Matrix4();\n        const tan_half_fov = Math.tan(fov_rads / 2);\n        const near_minus_far = near - far;\n        m._m[0] = 1 / (tan_half_fov * aspect_ratio);\n        m._m[5] = 1 / tan_half_fov;\n        m._m[10] = (-near - far) / near_minus_far;\n        m._m[11] = 2 * far * near / near_minus_far;\n        m._m[14] = 1;\n        m._m[15] = 0;\n        return m;\n    }\n    static screenSpace(width, height) {\n        const m = new Matrix4();\n        const w = width / 2;\n        const h = height / 2;\n        m._m[0] = w;\n        m._m[3] = w;\n        m._m[5] = h;\n        m._m[7] = h;\n        return m;\n    }\n    static translation(v) {\n        const m = new Matrix4();\n        m._m[3] = v.x;\n        m._m[7] = v.y;\n        m._m[11] = v.z;\n        return m;\n    }\n}\nexports.Matrix4 = Matrix4;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst MathUtils_1 = require(\"../Utils/MathUtils\");\nclass VaryingInterpolator {\n    constructor(VAO, ...vertices) {\n        this._varyings = new Map();\n        this._vertices = vertices;\n        this._VAO = VAO;\n    }\n    stepX(varying) {\n        return (varying.current = MathUtils_1.interpolableAdd(varying.current, varying.x_step));\n    }\n    get varyings() {\n        return this._varyings;\n    }\n    get VAO() {\n        return this._VAO;\n    }\n}\nexports.VaryingInterpolator = VaryingInterpolator;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Vec4_1 = require(\"./Vector/Vec4\");\nfunction createCSSColorConverter(max_history = 100) {\n    const cnv = document.createElement('canvas');\n    cnv.width = 1;\n    cnv.height = 1;\n    const ctx = cnv.getContext('2d');\n    const history = new Map();\n    return (style) => {\n        if (history.has(style))\n            return history.get(style);\n        ctx.fillStyle = style;\n        ctx.fillRect(0, 0, 1, 1);\n        ctx.fill();\n        const [r, g, b, a] = ctx.getImageData(0, 0, 1, 1).data;\n        const color = new Vec4_1.Vec4(r / 255, g / 255, b / 255, a / 255);\n        if (history.size === max_history) {\n            history.delete(history.keys().next().value);\n        }\n        history.set(style, color);\n        return color;\n    };\n}\nfunction hexToColor(hex) {\n    return new Vec4_1.Vec4(((hex >> 16) & 0xff) / 0xff, ((hex >> 8) & 0xff) / 0xff, (hex & 0xff) / 0xff, 1);\n}\nexports.hexToColor = hexToColor;\nexports.colors = {\n    transparent: new Vec4_1.Vec4(0, 0, 0, 0),\n    black: hexToColor(0x000000),\n    white: hexToColor(0xffffff),\n    red: hexToColor(0xff0000),\n    green: hexToColor(0x00ff00),\n    blue: hexToColor(0x0000ff),\n    yellow: hexToColor(0xffff00),\n    cyan: hexToColor(0x00ffff),\n    pink: hexToColor(0xff00ff),\n    orange: hexToColor(0xff8c00),\n    rand: () => hexToColor(Math.floor(Math.random() * 0x1000000)),\n    css: undefined\n};\nif (typeof window !== 'undefined') {\n    exports.colors.css = createCSSColorConverter();\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Vector_1 = require(\"./Vector\");\n// N-dimensional vector, N >= 4\nclass VecN {\n    constructor(values) {\n        if (values.length < 4) {\n            throw new Error(`Cannot construct a VecN with less than 4 elements, got : ${values}`);\n        }\n        this._values = values instanceof Float32Array ? values : new Float32Array(values);\n        this._dims = values.length;\n    }\n    add(v) {\n        const out = new VecN(this._values);\n        for (let i = 0; i < this._dims; i++) {\n            out._values[i] += v._values[i];\n        }\n        return out;\n    }\n    sub(v) {\n        const out = new VecN(this._values);\n        for (let i = 0; i < this._dims; i++) {\n            out._values[i] -= v._values[i];\n        }\n        return out;\n    }\n    mul(v) {\n        const out = new VecN(this._values);\n        for (let i = 0; i < this._dims; i++) {\n            out._values[i] *= v._values[i];\n        }\n        return out;\n    }\n    times(k) {\n        const out = new VecN(this._values);\n        for (let i = 0; i < this._dims; i++) {\n            out._values[i] *= k;\n        }\n        return out;\n    }\n    div(v) {\n        const out = new VecN(this._values);\n        for (let i = 0; i < this._dims; i++) {\n            out._values[i] /= v._values[i];\n        }\n        return out;\n    }\n    dot(v) {\n        let sum = 0;\n        for (let i = 0; i < this._dims; i++) {\n            sum += this._values[i] * v._values[i];\n        }\n        return sum;\n    }\n    mag() {\n        let sum = 0;\n        for (let i = 0; i < this._dims; i++) {\n            sum += Math.pow(this._values[i], 2);\n        }\n        return Math.sqrt(sum);\n    }\n    normalize() {\n        return this.times(1 / this.mag());\n    }\n    reflect(N) {\n        return N.times(2 * this.dot(N)).sub(this);\n    }\n    addTimes(v, k) {\n        const out = new VecN(this._values);\n        for (let i = 0; i < this._dims; i++) {\n            out._values[i] = out._values[i] + v._values[i] * k;\n        }\n        return out;\n    }\n    equals(v, eps = Vector_1.EPS) {\n        if (this._dims !== v._dims)\n            return false;\n        for (let i = 0; i < this._dims; i++) {\n            if (Math.abs(this._values[i] - v._values[i]) > eps)\n                return false;\n        }\n        return true;\n    }\n    get dims() {\n        return this._dims;\n    }\n    get values() {\n        return this._values;\n    }\n    set values(new_values) {\n        this._values = new_values;\n        this._dims = new_values.length;\n    }\n    get r() {\n        return this._values[0];\n    }\n    get x() {\n        return this._values[0];\n    }\n    set r(r) {\n        this._values[0] = r;\n    }\n    set x(x) {\n        this._values[0] = x;\n    }\n    get g() {\n        return this._values[1];\n    }\n    get y() {\n        return this._values[1];\n    }\n    set g(g) {\n        this._values[1] = g;\n    }\n    set y(y) {\n        this._values[1] = y;\n    }\n    get b() {\n        return this._values[2];\n    }\n    get z() {\n        return this._values[2];\n    }\n    set b(b) {\n        this._values[2] = b;\n    }\n    set z(z) {\n        this._values[2] = z;\n    }\n    get a() {\n        return this._values[3];\n    }\n    get w() {\n        return this._values[3];\n    }\n    set a(a) {\n        this._values[3] = a;\n    }\n    set w(w) {\n        this._values[3] = w;\n    }\n}\nexports.VecN = VecN;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst MathUtils_1 = require(\"./Utils/MathUtils\");\nclass Edge {\n    constructor(from, to, gradient) {\n        this._y_start = Math.ceil(from.ndc.y);\n        this._y_end = Math.ceil(to.ndc.y);\n        this._interpolator = gradient;\n        this._varyings = new Map();\n        this._varying_names = [...gradient.varyings.keys()];\n        this._from = from;\n        this._to = to;\n        const y_offset = this._y_start - from.ndc.y;\n        this._x_step = (from.ndc.x - to.ndc.x) / (from.ndc.y - to.ndc.y);\n        this._x = from.ndc.x + y_offset * this._x_step;\n        const x_offset = this._x - from.ndc.x;\n        for (let i = 0; i < this._varying_names.length; i++) {\n            const name = this._varying_names[i];\n            const varying = gradient.varyings.get(name);\n            this._varyings.set(name, {\n                current: MathUtils_1.interpolableAddTimes(MathUtils_1.interpolableAddTimes(gradient.VAO.varyings.get(name)[from.index], varying.x_step, x_offset), varying.y_step, y_offset),\n                step: MathUtils_1.interpolableAddTimes(varying.y_step, varying.x_step, this._x_step)\n            });\n        }\n    }\n    step() {\n        this._x += this._x_step;\n        for (let i = 0; i < this._varying_names.length; i++) {\n            const name = this._varying_names[i];\n            const varying = this._varyings.get(name);\n            varying.current = MathUtils_1.interpolableAdd(varying.current, varying.step);\n        }\n    }\n    get x() {\n        return this._x;\n    }\n    get y_start() {\n        return this._y_start;\n    }\n    get y_end() {\n        return this._y_end;\n    }\n    get from() {\n        return this._from;\n    }\n    get to() {\n        return this._to;\n    }\n    get varyings() {\n        return this._varyings;\n    }\n    get gradient() {\n        return this._interpolator;\n    }\n}\nexports.Edge = Edge;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst VaryingInterpolator_1 = require(\"./VaryingInterpolator\");\nclass VaryingInterpolator2 extends VaryingInterpolator_1.VaryingInterpolator {\n    constructor(a, b, VAO) {\n        super(VAO, a, b);\n        this._inv_dx = 1 / (b.ndc.x - a.ndc.x);\n        this._inv_dy = 1 / (b.ndc.y - a.ndc.y);\n        this._computeGradients();\n    }\n    _computeGradients() {\n        for (const name in this._vertices[0].varyings) {\n            const current_varyings = this._VAO.varyings.get(name);\n            const varying_a = current_varyings[this._vertices[0].index];\n            const varying_b = current_varyings[this._vertices[1].index];\n            if (typeof varying_a === 'number') {\n                this._varyings.set(name, this._computeFloatGradient(varying_a, varying_b));\n            }\n            else {\n                this._varyings.set(name, this._computeVecGradient(varying_a, varying_b));\n            }\n        }\n    }\n    _computeFloatGradient(a, b) {\n        const x_step = (b - a) * this._inv_dx;\n        const y_step = (b - a) * this._inv_dy;\n        return { x_step, y_step };\n    }\n    _computeVecGradient(a, b) {\n        const x_step = b.sub(a).times(this._inv_dx);\n        const y_step = b.sub(a).times(this._inv_dy);\n        return { x_step, y_step };\n    }\n}\nexports.VaryingInterpolator2 = VaryingInterpolator2;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst MathUtils_1 = require(\"../Utils/MathUtils\");\nconst VaryingInterpolator_1 = require(\"./VaryingInterpolator\");\nclass VaryingInterpolator3 extends VaryingInterpolator_1.VaryingInterpolator {\n    constructor(a, b, c, VAO) {\n        super(VAO, a, b, c);\n        this._inv_dx = 1 /\n            (((b.ndc.x - c.ndc.x) *\n                (a.ndc.y - c.ndc.y)) -\n                ((a.ndc.x - c.ndc.x) *\n                    (b.ndc.y - c.ndc.y)));\n        this._inv_dy = -this._inv_dx;\n        this._computeGradients();\n    }\n    _computeGradients() {\n        // http://web.cs.ucdavis.edu/~amenta/s12/perspectiveCorrect.pdf\n        const one_over_z_a = this._vertices[0].ndc.w;\n        const one_over_z_b = this._vertices[1].ndc.w;\n        const one_over_z_c = this._vertices[2].ndc.w;\n        for (const name of this._VAO.varyingNames) {\n            const current_varyings = this._VAO.varyings.get(name);\n            //apply perspective correct texture mapping:\n            if (name !== '__ndc') {\n                current_varyings[this._vertices[0].index] =\n                    MathUtils_1.interpolableTimes(current_varyings[this._vertices[0].index], one_over_z_a);\n                current_varyings[this._vertices[1].index] =\n                    MathUtils_1.interpolableTimes(current_varyings[this._vertices[1].index], one_over_z_b);\n                current_varyings[this._vertices[2].index] =\n                    MathUtils_1.interpolableTimes(current_varyings[this._vertices[2].index], one_over_z_c);\n            }\n            let varying_a = current_varyings[this._vertices[0].index];\n            let varying_b = current_varyings[this._vertices[1].index];\n            let varying_c = current_varyings[this._vertices[2].index];\n            if (typeof varying_a === 'number') {\n                this._varyings.set(name, this._computeFloatGradient(varying_a, varying_b, varying_c));\n            }\n            else {\n                this._varyings.set(name, this._computeVecGradient(varying_a, varying_b, varying_c));\n            }\n        }\n    }\n    _computeFloatGradient(a, b, c) {\n        const ac_delta_y = this._vertices[0].ndc.y - this._vertices[2].ndc.y;\n        const bc_delta_y = this._vertices[1].ndc.y - this._vertices[2].ndc.y;\n        const x_step = (b - c) * (ac_delta_y) - ((a - c) * (bc_delta_y)) * (this._inv_dx);\n        const ac_delta_x = this._vertices[0].ndc.x - this._vertices[2].ndc.x;\n        const bc_delta_x = this._vertices[1].ndc.x - this._vertices[2].ndc.x;\n        const y_step = (b - c) * (ac_delta_x) - ((a - c) * (bc_delta_x)) * (this._inv_dy);\n        return { x_step, y_step };\n    }\n    _computeVecGradient(a, b, c) {\n        const ac_delta_y = this._vertices[0].ndc.y - this._vertices[2].ndc.y;\n        const bc_delta_y = this._vertices[1].ndc.y - this._vertices[2].ndc.y;\n        const b_sub_c = b.sub(c);\n        const a_sub_c = a.sub(c);\n        const x_step = b_sub_c.times(ac_delta_y).sub(a_sub_c.times(bc_delta_y)).times(this._inv_dx);\n        const ac_delta_x = this._vertices[0].ndc.x - this._vertices[2].ndc.x;\n        const bc_delta_x = this._vertices[1].ndc.x - this._vertices[2].ndc.x;\n        const y_step = b_sub_c.times(ac_delta_x).sub(a_sub_c.times(bc_delta_x)).times(this._inv_dy);\n        return { x_step, y_step };\n    }\n}\nexports.VaryingInterpolator3 = VaryingInterpolator3;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./Bitmap\"));\n__export(require(\"./Context\"));\n__export(require(\"./Edge\"));\n__export(require(\"./Utils/Clock\"));\n__export(require(\"./Utils/ColorUtils\"));\n__export(require(\"./Utils/MathUtils\"));\n__export(require(\"./Utils/Matrix4\"));\n__export(require(\"./Utils/ModelLoader\"));\n__export(require(\"./Texture\"));\n__export(require(\"./Utils/Vector/Vec2\"));\n__export(require(\"./Utils/Vector/Vec3\"));\n__export(require(\"./Utils/Vector/Vec4\"));\n__export(require(\"./Utils/Vector/VecN\"));\n__export(require(\"./Utils/Vector/VecShorthands\"));\n__export(require(\"./Utils/Vector/Vector\"));\n__export(require(\"./VaryingInterpolator/VaryingInterpolator\"));\n__export(require(\"./VaryingInterpolator/VaryingInterpolator2\"));\n__export(require(\"./VaryingInterpolator/VaryingInterpolator3\"));\n__export(require(\"./VertexArray\"));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Bitmap_1 = require(\"./Bitmap\");\nconst Edge_1 = require(\"./Edge\");\nconst MathUtils_1 = require(\"./Utils/MathUtils\");\nconst Matrix4_1 = require(\"./Utils/Matrix4\");\nconst Vec4_1 = require(\"./Utils/Vector/Vec4\");\nconst VaryingInterpolator2_1 = require(\"./VaryingInterpolator/VaryingInterpolator2\");\nconst VaryingInterpolator3_1 = require(\"./VaryingInterpolator/VaryingInterpolator3\");\nvar DrawingMode;\n(function (DrawingMode) {\n    DrawingMode[DrawingMode[\"POINTS\"] = 0] = \"POINTS\";\n    DrawingMode[DrawingMode[\"LINES\"] = 1] = \"LINES\";\n    DrawingMode[DrawingMode[\"TRIANGLES\"] = 2] = \"TRIANGLES\";\n})(DrawingMode = exports.DrawingMode || (exports.DrawingMode = {}));\nclass Context extends Bitmap_1.Bitmap {\n    constructor(width, height, target, options) {\n        super(width, height);\n        this._target = target;\n        this._initOptions(options);\n        this._screen_space_matrix = Matrix4_1.Matrix4.screenSpace(width, height);\n    }\n    initDepthBuffer() {\n        if (this._options.depth_test) {\n            this._depth_buffer = new Float32Array(this._width * this._height);\n            this._depth_buffer.fill(Infinity);\n        }\n    }\n    _initOptions(optns = {}) {\n        this._options = Object.assign({ depth_test: true, backface_culling: true }, optns);\n        if (this._target.init !== undefined) {\n            this._target.init(this._width, this._height);\n        }\n        this.initDepthBuffer();\n    }\n    _perspectiveTransform(u) {\n        const res = this._program.vertex_shader(u);\n        //convert from ndc to screen space\n        const v = this._screen_space_matrix.transform(res);\n        const pos = new Vec4_1.Vec4(v.x / v.w, v.y / v.w, v.z / v.w, 1 / v.w);\n        // interpolate the position for z-buffering\n        u.varyings.__ndc = pos;\n        return {\n            ndc: pos,\n            varyings: u.varyings,\n            index: u.index\n        };\n    }\n    _shouldDrawFragment(x, y, depth) {\n        // if (x < 0 || x > this._image.width || y < 0 || y > this._image.height) {\n        //     return false;\n        // }\n        // don't override hidden fragments\n        if (this._options.depth_test) {\n            const idx = x + y * this._width;\n            if (depth > this._depth_buffer[idx])\n                return false;\n            this._depth_buffer[idx] = depth;\n        }\n        return true;\n    }\n    // _current_gradients must be set before calling _scanLine\n    _scanLine(y, left, right) {\n        y = Math.ceil(y);\n        const x_min = Math.ceil(left.x);\n        const x_max = Math.ceil(right.x);\n        const x_offset = x_min - left.x;\n        this._initVaryings(left, x_offset);\n        this._current_varyings = {};\n        const ndc = this._current_gradient.varyings.get('__ndc');\n        let z;\n        for (let x = x_min; x < x_max; x++) {\n            // interpolate each varying with perspective correction\n            this._current_gradient.stepX(ndc);\n            z = 1 / ndc.current.w;\n            for (const name of this._vertex_array.varyingNames) {\n                if (name === '__ndc')\n                    continue;\n                const varying = this._current_gradient.varyings.get(name);\n                // this._current_varyings[name] = interpolableAddTimes(v.current, v.x_step, z);\n                this._current_varyings[name] = MathUtils_1.interpolableTimes(this._current_gradient.stepX(varying), z);\n            }\n            if (!this._shouldDrawFragment(x, y, ndc.current.z))\n                continue;\n            this._set(x, y, this._program.fragment_shader(this._current_varyings, this._vertex_array.uniforms));\n        }\n    }\n    _initVaryings(left, x_offset) {\n        // init all varyings to their interpolated value on the left edge\n        for (const name of this._vertex_array.varyingNames) {\n            const varying = this._current_gradient.varyings.get(name);\n            // take the ceiling difference into account\n            varying.current = MathUtils_1.interpolableAdd(left.varyings.get(name).current, MathUtils_1.interpolableTimes(varying.x_step, x_offset));\n        }\n    }\n    _strokeEdge(edge) {\n        const from = edge.from;\n        const to = edge.to;\n        const x0 = Math.ceil(from.ndc.x);\n        const y0 = Math.ceil(from.ndc.y);\n        const x1 = Math.ceil(to.ndc.x);\n        const y1 = Math.ceil(to.ndc.y);\n        const dx = Math.abs(x1 - x0);\n        const dy = Math.abs(y1 - y0);\n        const sx = x0 < x1 ? 1 : -1;\n        const sy = y0 < y1 ? 1 : -1;\n        let eps = dx - dy;\n        this._current_gradient = edge.gradient;\n        const x_offset = x0 - from.ndc.x;\n        this._initVaryings(edge, x_offset);\n        let x = x0;\n        let y = y0;\n        const varyings = {};\n        while (x !== x1 || y !== y1) {\n            // interpolate each varying\n            for (const [name, varying] of this._current_gradient.varyings) {\n                this._current_gradient.stepX(varying);\n                varyings[name] = varying.current;\n            }\n            // if (this._shouldDrawFragment(x, y)) {\n            //     this._set(x, y, this._program.fragment_shader(varyings));\n            // }\n            const e2 = 2 * eps;\n            if (e2 > -dy) {\n                eps -= dy;\n                x += sx;\n            }\n            if (e2 < dx) {\n                eps += dx;\n                y += sy;\n            }\n        }\n    }\n    _drawLines(first, count) {\n        for (let i = first; i < first + count; i += 2) {\n            const a = this._perspectiveTransform(this._vertex_array.at(i));\n            const b = this._perspectiveTransform(this._vertex_array.at(i + 1));\n            this._strokeEdge(new Edge_1.Edge(a, b, new VaryingInterpolator2_1.VaryingInterpolator2(a, b, this._vertex_array)));\n        }\n    }\n    _drawLinesIndexed(first, count) {\n        const indices = this._vertex_array.indices;\n        for (let i = first; i < first + count; i += 2) {\n            const a = this._perspectiveTransform(this._vertex_array.at(indices[i]));\n            const b = this._perspectiveTransform(this._vertex_array.at(indices[i + 1]));\n            this._strokeEdge(new Edge_1.Edge(a, b, new VaryingInterpolator2_1.VaryingInterpolator2(a, b, this._vertex_array)));\n        }\n    }\n    _drawTriangles(first, count, stroke) {\n        for (let i = first; i < first + count; i += 3) {\n            const a = this._perspectiveTransform(this._vertex_array.at(i));\n            const b = this._perspectiveTransform(this._vertex_array.at(i + 1));\n            const c = this._perspectiveTransform(this._vertex_array.at(i + 2));\n            if (stroke) {\n                this._strokeTriangle(a, b, c);\n            }\n            else {\n                this._fillTriangle(a, b, c);\n            }\n        }\n    }\n    _drawTrianglesIndexed(first, count, stroke) {\n        const indices = this._vertex_array.indices;\n        for (let i = first + count - 1; i >= 0; i -= 3) {\n            const a = this._perspectiveTransform(this._vertex_array.at(indices[i - 2]));\n            const b = this._perspectiveTransform(this._vertex_array.at(indices[i - 1]));\n            const c = this._perspectiveTransform(this._vertex_array.at(indices[i]));\n            if (stroke) {\n                this._strokeTriangle(a, b, c);\n            }\n            else {\n                this._fillTriangle(a, b, c);\n            }\n        }\n    }\n    _strokeTriangle(a, b, c) {\n        this._strokeEdge(new Edge_1.Edge(a, b, new VaryingInterpolator2_1.VaryingInterpolator2(a, b, this._vertex_array)));\n        this._strokeEdge(new Edge_1.Edge(a, c, new VaryingInterpolator2_1.VaryingInterpolator2(a, c, this._vertex_array)));\n        this._strokeEdge(new Edge_1.Edge(b, c, new VaryingInterpolator2_1.VaryingInterpolator2(b, c, this._vertex_array)));\n    }\n    _fillTriangle(a, b, c) {\n        // backface culling\n        if (this._options.backface_culling && MathUtils_1.parallelogramArea(a.ndc, b.ndc, c.ndc) < 0) {\n            return;\n        }\n        let invert = false;\n        // sort vertices by y coordinate (bubble sort)\n        if (c.ndc.y < b.ndc.y) {\n            [c, b] = [b, c];\n            invert = !invert;\n        }\n        if (b.ndc.y < a.ndc.y) {\n            [b, a] = [a, b];\n            invert = !invert;\n        }\n        if (c.ndc.y < b.ndc.y) {\n            [c, b] = [b, c];\n            invert = !invert;\n        }\n        const gradient = new VaryingInterpolator3_1.VaryingInterpolator3(a, b, c, this._vertex_array);\n        this._current_gradient = gradient;\n        const long = new Edge_1.Edge(a, c, gradient);\n        this._scanEdges(long, new Edge_1.Edge(a, b, gradient), invert);\n        this._scanEdges(long, new Edge_1.Edge(b, c, gradient), invert);\n    }\n    _scanEdges(long, short, invert) {\n        let left = long;\n        let right = short;\n        const y_start = short.y_start;\n        const y_end = short.y_end;\n        if (invert)\n            [left, right] = [right, left];\n        for (let y = y_start; y < y_end; y++) {\n            this._scanLine(y, left, right);\n            left.step();\n            right.step();\n        }\n    }\n    drawArrays(mode, first, count, stroke = false) {\n        switch (mode) {\n            case DrawingMode.LINES:\n                this._drawLines(first, count);\n                break;\n            case DrawingMode.TRIANGLES:\n                this._drawTriangles(first, count, stroke);\n                break;\n            default:\n                throw new Error(`Drawing mode ${mode} not implemented yet`);\n        }\n        this.draw();\n    }\n    drawElements(mode, first, count, stroke = false) {\n        if (!this._vertex_array.indexed) {\n            throw new Error('Cannot draw elements: indices not defined in bound vertex array');\n        }\n        switch (mode) {\n            case DrawingMode.LINES:\n                this._drawLinesIndexed(first, count);\n                break;\n            case DrawingMode.TRIANGLES:\n                this._drawTrianglesIndexed(first, count, stroke);\n                break;\n            default:\n                throw new Error(`Drawing mode ${mode} not implemented yet`);\n        }\n        this.draw();\n    }\n    useProgram(prog) {\n        this._program = prog;\n    }\n    bindVertexArray(VAO) {\n        this._vertex_array = VAO;\n    }\n    _clearDepthBuffer() {\n        if (this._options.depth_test) {\n            this._depth_buffer.fill(Infinity);\n        }\n    }\n    clearBuffers() {\n        this._clearDepthBuffer();\n    }\n    draw() {\n        this._target.draw(this);\n    }\n    get options() {\n        return this._options;\n    }\n    resize(width, height) {\n        super.resize(width, height);\n        this.initDepthBuffer();\n        this._screen_space_matrix = Matrix4_1.Matrix4.screenSpace(width, height);\n        if (this._target.resize !== undefined) {\n            this._target.resize(width, height);\n        }\n    }\n}\nexports.Context = Context;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Clock {\n    constructor() {\n        this.last_tick = Date.now();\n    }\n    getDelta() {\n        const now = Date.now();\n        const delta = now - this.last_tick;\n        this.last_tick = now;\n        return delta;\n    }\n}\nexports.Clock = Clock;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Vec2_1 = require(\"./Vector/Vec2\");\nconst Vec3_1 = require(\"./Vector/Vec3\");\nconst VecShorthands_1 = require(\"./Vector/VecShorthands\");\nvar ModelLoader;\n(function (ModelLoader) {\n    const parseVertex = (line) => {\n        // ex: \"v 1.000000 -1.000000 -1.000000\"\n        const coords = line.substr(2).split(' ').map(x => parseFloat(x));\n        return new Vec3_1.Vec3(coords[0], 1 - coords[1], coords[2]);\n    };\n    const parseUV = (line) => {\n        // ex: vt 1.000000 0.000000\n        const uvs = line.substr(3).split(' ').map(x => parseFloat(x));\n        return new Vec2_1.Vec2(uvs[0], uvs[1]);\n    };\n    const parseNormal = (line) => {\n        // ex: vn 0.000000 1.000000 0.000000\n        const coords = line.substr(3).split(' ').map(x => parseFloat(x));\n        return new Vec3_1.Vec3(coords[0], coords[1], coords[2]);\n    };\n    ModelLoader.parseOBJ = (obj_str) => {\n        const lines = obj_str.split('\\n');\n        const vertices = [];\n        const uvs = [];\n        const normals = [];\n        const indices = [];\n        const faces_cache = new Map();\n        let max_idx = 0;\n        const mesh = {\n            vertices: [],\n            indices: null,\n            attributes: {\n                uv: [],\n                normal: []\n            },\n            bounding_box: {\n                min: VecShorthands_1.vec3(Infinity),\n                max: VecShorthands_1.vec3(0)\n            }\n        };\n        for (let line of lines) {\n            line = line.trim();\n            switch (line.charAt(0)) {\n                case 'v':\n                    switch (line.charAt(1)) {\n                        case ' ':\n                            const v = parseVertex(line);\n                            if (v.x > mesh.bounding_box.max.x) {\n                                mesh.bounding_box.max.x = v.x;\n                            }\n                            if (v.y > mesh.bounding_box.max.y) {\n                                mesh.bounding_box.max.y = v.y;\n                            }\n                            if (v.z > mesh.bounding_box.max.z) {\n                                mesh.bounding_box.max.z = v.z;\n                            }\n                            if (v.x < mesh.bounding_box.min.x) {\n                                mesh.bounding_box.min.x = v.x;\n                            }\n                            if (v.y < mesh.bounding_box.min.y) {\n                                mesh.bounding_box.min.y = v.y;\n                            }\n                            if (v.z < mesh.bounding_box.min.z) {\n                                mesh.bounding_box.min.z = v.z;\n                            }\n                            vertices.push(v);\n                            break;\n                        case 't':\n                            uvs.push(parseUV(line));\n                            break;\n                        case 'n':\n                            normals.push(parseNormal(line));\n                            break;\n                    }\n                    break;\n                case 'f':\n                    // ex: f 1/1/1 2/2/1 3/3/1 4/4/1\n                    const faces = line.substr(2).split(' ');\n                    let face_indices = [];\n                    for (const face of faces) {\n                        if (faces_cache.has(face)) {\n                            face_indices.push(faces_cache.get(face));\n                            continue;\n                        }\n                        const [vert_idx, uv_idx, normal_idx] = face.split('/').map(x => parseInt(x) - 1);\n                        mesh.vertices.push(vertices[vert_idx]);\n                        if (uv_idx !== undefined)\n                            mesh.attributes.uv.push(uvs[uv_idx]);\n                        if (normal_idx !== undefined)\n                            mesh.attributes.normal.push(normals[normal_idx]);\n                        faces_cache.set(face, max_idx);\n                        face_indices.push(max_idx);\n                        max_idx++;\n                    }\n                    // triangulate the quad\n                    if (faces.length === 4) {\n                        const fourth = face_indices[3];\n                        face_indices[3] = face_indices[2];\n                        face_indices[4] = fourth;\n                        face_indices[5] = face_indices[0];\n                    }\n                    indices.push(...face_indices);\n                    break;\n            }\n        }\n        mesh.indices = max_idx < 256 ? new Uint8Array(indices) :\n            max_idx < 65536 ? new Uint16Array(indices) : new Uint32Array(indices);\n        return mesh;\n    };\n    // export const load = (source: string): Promise<VertexData> => {\n    //     return new Promise<VertexData>(async (resolve, reject) => {\n    //         try {\n    //             const data = await (await fetch(source)).text();\n    //             const model = parseOBJ(data);\n    //             resolve(model);\n    //         } catch (e) {\n    //             reject(e);\n    //         }\n    //     });\n    // }\n})(ModelLoader = exports.ModelLoader || (exports.ModelLoader = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Bitmap_1 = require(\"./Bitmap\");\nclass Texture extends Bitmap_1.Bitmap {\n    constructor(width, height) {\n        super(width, height);\n    }\n    at(uv) {\n        return super.read(Math.floor(uv.x * this._width), Math.floor(uv.y * this._height));\n    }\n}\nexports.Texture = Texture;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass VertexArray {\n    constructor(vertices) {\n        this._vertices = vertices;\n        this._attributes = new Map();\n        this._varyings = new Map();\n        // cache varying names so we don't have to use a rather slow for...in loop\n        this._varying_names = [];\n        this._uniforms = {};\n        this._current_idx = 0;\n        this._attribute_accessor = new Proxy({}, {\n            get: (_, prop) => {\n                if (typeof (prop) === 'string' && prop !== 'inspect') {\n                    if (this._attributes.has(prop)) {\n                        return this._attributes.get(prop)[this._current_idx];\n                    }\n                    else {\n                        throw new Error(`Undefined attribute: ${prop}`);\n                    }\n                }\n            }\n        });\n        this._varying_setter = new Proxy({}, {\n            set: (obj, prop, val) => {\n                const prop_varyings = this._varyings.get(prop);\n                if (prop_varyings === undefined) {\n                    const array = [];\n                    array[this._current_idx] = val;\n                    this._varyings.set(prop, array);\n                    this._varying_names.push(prop);\n                }\n                else {\n                    prop_varyings[this._current_idx] = val;\n                }\n                obj[prop] = val;\n                return true;\n            }\n        });\n    }\n    at(idx) {\n        this._current_idx = idx;\n        return {\n            position: this._vertices[idx],\n            attributes: this._attribute_accessor,\n            uniforms: this._uniforms,\n            varyings: this._varying_setter,\n            index: idx\n        };\n    }\n    addAttribute(name, values) {\n        if (values.length < this._vertices.length) {\n            throw new Error(`Not enough data for attribute ${name}`);\n        }\n        this._attributes.set(name, values);\n    }\n    setUniform(name, value) {\n        this._uniforms[name] = value;\n    }\n    indexed() {\n        return this._indices !== undefined;\n    }\n    get indices() {\n        return this._indices;\n    }\n    set indices(indices) {\n        this._indices = indices;\n    }\n    get varyings() {\n        return this._varyings;\n    }\n    get varyingNames() {\n        return this._varying_names;\n    }\n    get uniforms() {\n        return this._uniforms;\n    }\n    static fromModel(model) {\n        const VAO = new VertexArray(model.vertices);\n        if (model.indices !== undefined) {\n            VAO.indices = model.indices;\n        }\n        for (const attrib_name in model.attributes) {\n            const attribute = model.attributes[attrib_name];\n            if (attribute !== undefined) {\n                VAO.addAttribute(attrib_name, attribute);\n            }\n        }\n        return VAO;\n    }\n    get vertexCount() {\n        return this._vertices.length;\n    }\n}\nexports.VertexArray = VertexArray;\n"],"sourceRoot":""}